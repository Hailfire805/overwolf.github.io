"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3325],{35318:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>s,MDXProvider:()=>c,mdx:()=>h,useMDXComponents:()=>p,withMDXComponents:()=>d});var n=r(27378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o.apply(this,arguments)}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){return function(t){var r=p(t.components);return n.createElement(e,o({},t,{components:r}))}},p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),d=p(r),c=a,u=d["".concat(i,".").concat(c)]||d[c]||f[c]||o;return r?n.createElement(u,l(l({ref:t},s),{},{components:r})):n.createElement(u,l({ref:t},s))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=g;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},76057:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(25773),a=(r(27378),r(35318));const o={id:224,image:"/img/embed/changelogs.jpg",title:"Version 0.224",sidebar_label:"0.224",sidebar_custom_props:{overwolf_platform:!0,electron_platform:!1}},i=void 0,l={unversionedId:"api/changelogs/overwolf-platform/2023/may/224",id:"api/changelogs/overwolf-platform/2023/may/224",title:"Version 0.224",description:"As a part of this update, the recording API documentation is being rennovated. As such, some of these changes may not yet appear within their respective pages.",source:"@site/pages/docs/api/changelogs/overwolf-platform/2023/may/224.mdx",sourceDirName:"api/changelogs/overwolf-platform/2023/may",slug:"/api/changelogs/overwolf-platform/2023/may/224",permalink:"/api/changelogs/overwolf-platform/2023/may/224",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/website/pages/docs/api/changelogs/overwolf-platform/2023/may/224.mdx",tags:[],version:"current",lastUpdatedBy:"OdedItkinOW",lastUpdatedAt:1683896117,formattedLastUpdatedAt:"May 12, 2023",frontMatter:{id:"224",image:"/img/embed/changelogs.jpg",title:"Version 0.224",sidebar_label:"0.224",sidebar_custom_props:{overwolf_platform:!0,electron_platform:!1}},sidebar:"api",previous:{title:"Version 23.6.0",permalink:"/api/changelogs/electron-platform/ow-electron-builder/v23.6.0"},next:{title:"0.223",permalink:"/api/changelogs/overwolf-platform/2023/may/223"}},m={},s=[{value:"Platform",id:"platform",level:3}],d={toc:s};function p(e){let{components:t,...r}=e;return(0,a.mdx)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,(0,a.mdx)("em",{parentName:"p"},"As a part of this update, the recording API documentation is being rennovated. As such, some of these changes may not yet appear within their respective pages.")),(0,a.mdx)("h3",{id:"platform"},"Platform"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Updated the underlying ",(0,a.mdx)("inlineCode",{parentName:"li"},"OBS")," recording engine version (27.2.3 -> 29.1.0). Notable changes include:",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Deprecated the ",(0,a.mdx)("inlineCode",{parentName:"strong"},"NVIDIA_NVENC")," encoder")),(0,a.mdx)("li",{parentName:"ul"},"Improvements to the ",(0,a.mdx)("inlineCode",{parentName:"li"},"AMD_AMF")," and ",(0,a.mdx)("inlineCode",{parentName:"li"},"INTEL")," (Quick Sync) video encoders",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},"The new ",(0,a.mdx)("inlineCode",{parentName:"li"},"AMD_AMF")," implementation should run faster across the board, but may see a slight performance loss on considerably older hardware"),(0,a.mdx)("li",{parentName:"ul"},"The ",(0,a.mdx)("inlineCode",{parentName:"li"},"INTEL")," encoder has new encoder presets, which also cover the underlying OBS ",(0,a.mdx)("inlineCode",{parentName:"li"},"target_usage")," parameter."))),(0,a.mdx)("li",{parentName:"ul"},"Added three new ",(0,a.mdx)("inlineCode",{parentName:"li"},"HEVC")," encoders - ",(0,a.mdx)("inlineCode",{parentName:"li"},"NVIDIA_NVENC_HEVC"),", ",(0,a.mdx)("inlineCode",{parentName:"li"},"INTEL_HEVC"),", ",(0,a.mdx)("inlineCode",{parentName:"li"},"AMD_AMF_HEVC"),(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},"These new encoders can only be used for local recordings, not for ",(0,a.mdx)("em",{parentName:"li"},"live"),"streaming (not to be confused with the ",(0,a.mdx)("a",{parentName:"li",href:"/api/streaming"},"streaming API"),")"))),(0,a.mdx)("li",{parentName:"ul"},"Various changes to the lists of supported video encoder presets - the full list for comparison will be published in the coming days",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},"Passing an invalid encoder preset will not throw an error, but instead use the default preset for that encoder. This also includes deprecated encoder presets"))),(0,a.mdx)("li",{parentName:"ul"},"Microphones can now be set to record as ",(0,a.mdx)("a",{parentName:"li",href:"/api/streaming#streamdevicevolume-object"},(0,a.mdx)("inlineCode",{parentName:"a"},"mono"))," rather than stereo."),(0,a.mdx)("li",{parentName:"ul"},"Added support for the ",(0,a.mdx)("inlineCode",{parentName:"li"},"encoder.config.profile")," parameter from the underlying OBS, which accepts a value from the ",(0,a.mdx)("inlineCode",{parentName:"li"},"overwolf.streaming.enums.StreamEncoderProfile")," enum."),(0,a.mdx)("li",{parentName:"ul"},"Added the ",(0,a.mdx)("inlineCode",{parentName:"li"},"encoder_custom_parameters")," field to the ",(0,a.mdx)("inlineCode",{parentName:"li"},"extra_options")," field, which allows you to pass encoder-related settings directly as is to the OBS engine,\noverriding any settings set by the Overwolf API. Documentation for finding the exact value names and values is currently in the works."),(0,a.mdx)("li",{parentName:"ul"},"Removed error for using a wrong ",(0,a.mdx)("inlineCode",{parentName:"li"},"encoder.config.preset")," value. Any invalid preset passed in will now instead default to the encoder's default preset.",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},"This also means that both ",(0,a.mdx)("inlineCode",{parentName:"li"},"config.preset")," and ",(0,a.mdx)("inlineCode",{parentName:"li"},"config")," are no longer required parameters when setting a specific encoder.")))))))}p.isMDXComponent=!0}}]);