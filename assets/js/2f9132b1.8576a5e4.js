"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6324],{3905:function(e,t,a){a.r(t),a.d(t,{MDXContext:function(){return o},MDXProvider:function(){return u},mdx:function(){return h},useMDXComponents:function(){return p},withMDXComponents:function(){return s}});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},r.apply(this,arguments)}function d(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?d(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):d(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),s=function(e){return function(t){var a=p(t.components);return n.createElement(e,r({},t,{components:a}))}},p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},x=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,o=m(e,["components","mdxType","originalType","parentName"]),s=p(a),u=l,x=s["".concat(d,".").concat(u)]||s[u]||g[u]||r;return a?n.createElement(x,i(i({ref:t},o),{},{components:a})):n.createElement(x,i({ref:t},o))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,d=new Array(r);d[0]=x;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:l,d[1]=i;for(var o=2;o<r;o++)d[o]=a[o];return n.createElement.apply(null,d)}return n.createElement.apply(null,a)}x.displayName="MDXCreateElement"},20250:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return m},default:function(){return g},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return p}});var n=a(87462),l=a(63366),r=(a(67294),a(3905)),d=["components"],i={id:"hotkeys",title:"overwolf.settings.hotkeys API",sidebar_label:"overwolf.settings.hotkeys"},m=void 0,o={unversionedId:"api/settings/hotkeys",id:"api/settings/hotkeys",title:"overwolf.settings.hotkeys API",description:"Use this API to view and modify the Overwolf hotkeys settings properties.",source:"@site/pages/docs/api/settings/hotkeys.mdx",sourceDirName:"api/settings",slug:"/api/settings/hotkeys",permalink:"/api/settings/hotkeys",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/website/pages/docs/api/settings/hotkeys.mdx",tags:[],version:"current",lastUpdatedBy:"Oded Itkin",lastUpdatedAt:1658067227,formattedLastUpdatedAt:"7/17/2022",frontMatter:{id:"hotkeys",title:"overwolf.settings.hotkeys API",sidebar_label:"overwolf.settings.hotkeys"},sidebar:"api",previous:{title:"overwolf.settings.games",permalink:"/api/settings/games"},next:{title:"overwolf.settings.language",permalink:"/api/settings/language"}},s={},p=[{value:"Methods Reference",id:"methods-reference",level:2},{value:"Events Reference",id:"events-reference",level:2},{value:"Types Reference",id:"types-reference",level:2},{value:"assign(hotkey, callback)",id:"assignhotkey-callback",level:2},{value:"Version added: 0.160",id:"version-added-0160",level:4},{value:"Permissions required: Hotkeys",id:"permissions-required-hotkeys",level:4},{value:"Notes",id:"notes",level:4},{value:"Usage example",id:"usage-example",level:4},{value:"unassign(hotkey, callback)",id:"unassignhotkey-callback",level:2},{value:"Version added: 0.160",id:"version-added-0160-1",level:4},{value:"Permissions required: Hotkeys",id:"permissions-required-hotkeys-1",level:4},{value:"Usage example",id:"usage-example-1",level:4},{value:"get(callback)",id:"getcallback",level:2},{value:"Version added: 0.142",id:"version-added-0142",level:4},{value:"Permissions required: Hotkeys",id:"permissions-required-hotkeys-2",level:4},{value:"onHold",id:"onhold",level:2},{value:"Version added: 0.142",id:"version-added-0142-1",level:4},{value:"onPressed",id:"onpressed",level:2},{value:"Version added: 0.142",id:"version-added-0142-2",level:4},{value:"OnChanged",id:"onchanged",level:2},{value:"Version added: 0.142",id:"version-added-0142-3",level:4},{value:"IHotkey Object",id:"ihotkey-object",level:2},{value:"Version added: 0.142",id:"version-added-0142-4",level:4},{value:"Example data",id:"example-data",level:4},{value:"GetAssignedHotkeyResult Object",id:"getassignedhotkeyresult-object",level:2},{value:"Version added: 0.142",id:"version-added-0142-5",level:4},{value:"Callback example",id:"callback-example",level:4},{value:"Notes",id:"notes-1",level:4},{value:"Callback example with global hotkeys",id:"callback-example-with-global-hotkeys",level:4},{value:"OnHoldEvent Object",id:"onholdevent-object",level:2},{value:"Event data example",id:"event-data-example",level:4},{value:"OnPressedEvent Object",id:"onpressedevent-object",level:2},{value:"Event data example",id:"event-data-example-1",level:4},{value:"OnChangedEvent Object",id:"onchangedevent-object",level:2},{value:"Event data example",id:"event-data-example-2",level:4},{value:"AssignHotkeyObject Object",id:"assignhotkeyobject-object",level:2},{value:"Version added: 0.160",id:"version-added-0160-2",level:4},{value:"UnassignHotkeyObject Object",id:"unassignhotkeyobject-object",level:2},{value:"Version added: 0.160",id:"version-added-0160-3",level:4},{value:"HotkeyModifiers Object",id:"hotkeymodifiers-object",level:2},{value:"Version added: 0.160",id:"version-added-0160-4",level:4}],u={toc:p};function g(e){var t=e.components,a=(0,l.Z)(e,d);return(0,r.mdx)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"Use this API to view and modify the Overwolf hotkeys settings properties."),(0,r.mdx)("div",{className:"admonition admonition-important alert alert--info"},(0,r.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,r.mdx)("h5",{parentName:"div"},(0,r.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.mdx)("div",{parentName:"div",className:"admonition-content"},(0,r.mdx)("p",{parentName:"div"},"Please read all the info about hotkeys and how to use them in our ",(0,r.mdx)("a",{parentName:"p",href:"/topics/best-practices/hotkeys-best-practices"},"hotkeys best practice")," guide."))),(0,r.mdx)("h2",{id:"methods-reference"},"Methods Reference"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#getcallback"},"overwolf.settings.hotkeys.get()")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#assignhotkey-callback"},"overwolf.settings.hotkeys.assign()")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#unassignhotkey-callback"},"overwolf.settings.hotkeys.unassign()"))),(0,r.mdx)("h2",{id:"events-reference"},"Events Reference"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#onhold"},"overwolf.settings.hotkeys.onHold")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#onpressed"},"overwolf.settings.hotkeys.onPressed")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#onchanged"},"overwolf.settings.hotkeys.onChanged"))),(0,r.mdx)("h2",{id:"types-reference"},"Types Reference"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#getassignedhotkeyresult-object"},"overwolf.settings.hotkeys.GetAssignedHotkeyResult")," Object"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#ihotkey-object"},"overwolf.settings.hotkeys.IHotkey")," Object"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#onholdevent-object"},"overwolf.settings.hotkeys.OnHoldEvent")," Object"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#onpressedevent-object"},"overwolf.settings.hotkeys.OnPressedEvent")," Object"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#onchangedevent-object"},"overwolf.settings.hotkeys.OnChangedEvent")," Object"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#assignhotkeyobject-object"},"overwolf.settings.hotkeys.AssignHotkeyObject")," Object"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#unassignhotkeyobject-object"},"overwolf.settings.hotkeys.UnassignHotkeyObject")," Object"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#hotkeymodifiers-object"},"overwolf.settings.hotkeys.HotkeyModifiers")," Object")),(0,r.mdx)("h2",{id:"assignhotkey-callback"},"assign(hotkey, callback)"),(0,r.mdx)("h4",{id:"version-added-0160"},"Version added: 0.160"),(0,r.mdx)("h4",{id:"permissions-required-hotkeys"},"Permissions required: Hotkeys"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Assign global hotkey for the current extension, OR, if a gameId is specified, assign/unassign a dedicated hotkey.")),(0,r.mdx)("h4",{id:"notes"},"Notes"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"You can assign only hotkeys that pre-defined in your manifest."),(0,r.mdx)("li",{parentName:"ul"},"You can assign a global hotkey (means - not send a game id) through the API only if your app is targeted in the manifest to more then one game (or to all games).\nPlease read all the info in our ",(0,r.mdx)("a",{parentName:"li",href:"/topics/best-practices/hotkeys-best-practices#set-through-the-manifest"},"hotkeys best practice")," guide.")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"hotkey"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#assignhotkeyobject-object"},"AssignHotkeyObject")," object"),(0,r.mdx)("td",{parentName:"tr",align:null},"The hotkey to assign")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"callback"),(0,r.mdx)("td",{parentName:"tr",align:null},"(Result) => void"),(0,r.mdx)("td",{parentName:"tr",align:null},"Reports success or failure")))),(0,r.mdx)("h4",{id:"usage-example"},"Usage example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},"newHotkey = {\n  name: <name-of hotkey>,\n  gameid: <only use if applicable>,\n  virtualKey: 75,\n  modifiers: {\n    ctrl: true //shift\n  }\n};\noverwolf.settings.hotkeys.assign(newHotkey, console.log)\n")),(0,r.mdx)("h2",{id:"unassignhotkey-callback"},"unassign(hotkey, callback)"),(0,r.mdx)("h4",{id:"version-added-0160-1"},"Version added: 0.160"),(0,r.mdx)("h4",{id:"permissions-required-hotkeys-1"},"Permissions required: Hotkeys"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Unassign global hotkey for the current extension, OR, if a gameId is specified, assign/unassign a dedicated hotkey.")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"hotkey"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#unassignhotkeyobject-object"},"UnassignHotkeyObject")," object"),(0,r.mdx)("td",{parentName:"tr",align:null},"The hotkey to unassign")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"callback"),(0,r.mdx)("td",{parentName:"tr",align:null},"(Result) => void"),(0,r.mdx)("td",{parentName:"tr",align:null},"Reports success or failure")))),(0,r.mdx)("h4",{id:"usage-example-1"},"Usage example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},"hotkey = {\n  name: <name-of hotkey>,\n  gameid: <only use if applicable>\n};\noverwolf.settings.hotkeys.unassign(hotkey, console.log)\n")),(0,r.mdx)("h2",{id:"getcallback"},"get(callback)"),(0,r.mdx)("h4",{id:"version-added-0142"},"Version added: 0.142"),(0,r.mdx)("h4",{id:"permissions-required-hotkeys-2"},"Permissions required: Hotkeys"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Returns the hotkey assigned ",(0,r.mdx)("strong",{parentName:"p"},"for the current extension")," in all the games.")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"callback"),(0,r.mdx)("td",{parentName:"tr",align:null},"function"),(0,r.mdx)("td",{parentName:"tr",align:null},"A callback function which will be called with the status of the request")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"callback"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#getassignedhotkeyresult-object"},"(Result:GetAssignedHotkeyResult )")," => void"),(0,r.mdx)("td",{parentName:"tr",align:null},"Returns info about the currently running game")))),(0,r.mdx)("h2",{id:"onhold"},"onHold"),(0,r.mdx)("h4",{id:"version-added-0142-1"},"Version added: 0.142"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Fired only for hotkeys that are set in the manifest as ",(0,r.mdx)("inlineCode",{parentName:"p"},"hold"),", with the following structure: ",(0,r.mdx)("a",{parentName:"p",href:"#onholdevent-object"},"onHold")," Object")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Triggered only for the current extension hotkeys."),(0,r.mdx)("li",{parentName:"ul"},"This event will be fired twice - on key down and on key up.")),(0,r.mdx)("h2",{id:"onpressed"},"onPressed"),(0,r.mdx)("h4",{id:"version-added-0142-2"},"Version added: 0.142"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Fired for hotkeys that are NOT set as hold hotkeys, with the following structure: ",(0,r.mdx)("a",{parentName:"p",href:"#onpressedevent-object"},"OnPressedEvent")," Object")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Triggered only for the current extension hotkeys."),(0,r.mdx)("li",{parentName:"ul"},"This event will replace the deprecated ",(0,r.mdx)("a",{parentName:"li",href:"../settings#registerhotkeyactionid-callback"},"overwolf.settings.registerHotKey()")," function, as a way to register for hotkey events.")),(0,r.mdx)("h2",{id:"onchanged"},"OnChanged"),(0,r.mdx)("h4",{id:"version-added-0142-3"},"Version added: 0.142"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Fired on hotkey setting change, with the following structure: ",(0,r.mdx)("a",{parentName:"p",href:"#onchangedevent-object"},"OnChangedEvent")," Object")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Triggered only for the current extension hotkeys."),(0,r.mdx)("li",{parentName:"ul"},"Listen to this event if you want to get notified when the user changed your app hotkeys from the OW client settings page.")),(0,r.mdx)("h2",{id:"ihotkey-object"},"IHotkey Object"),(0,r.mdx)("h4",{id:"version-added-0142-4"},"Version added: 0.142"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Container for hotkey properties.")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"name"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"title"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"virtualKeycode"),(0,r.mdx)("td",{parentName:"tr",align:null},"number"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"modifierKeys"),(0,r.mdx)("td",{parentName:"tr",align:null},"number"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"extensionuid"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"isPassthrough"),(0,r.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"hold"),(0,r.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"IsUnassigned"),(0,r.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"binding"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})))),(0,r.mdx)("h4",{id:"example-data"},"Example data"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "binding":"Ctrl+F3",\n    "name":"shots_fired_toggle_visibility",\n    "title":"Show In-Game",\n    "virtualKeycode":114, //F3\n    "modifierKeys":2, //Ctrl\n    "binding": "Ctrl+F3",\n    "extension-uid":"jdecmlblpoddjcmpdbhnefehffjfcjeijpkebedd",\n    "isPassthrough":false,\n    "hold":false,\n    "IsUnassigned":false\n}\n')),(0,r.mdx)("h2",{id:"getassignedhotkeyresult-object"},"GetAssignedHotkeyResult Object"),(0,r.mdx)("h4",{id:"version-added-0142-5"},"Version added: 0.142"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Container for the assigned hotkeys.")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"success"),(0,r.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,r.mdx)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"error"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object. null if success is true')),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"globals"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#ihotkey-object"},"IHotkey"),"[]"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"games"),(0,r.mdx)("td",{parentName:"tr",align:null},"object"),(0,r.mdx)("td",{parentName:"tr",align:null})))),(0,r.mdx)("h4",{id:"callback-example"},"Callback example"),(0,r.mdx)("p",null,"In the following example, we can see a callback example of an extension that set the same hotkeys (Ctrl + F3) for PUBG and Legends of Runeterra. Of course, you can set different hotkeys for different games."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'}\n    "success":true,\n    "globals":[], //see the next example for more details on this array\n    "games":{\n        "10906":[  //PUBG\n        {\n            "binding":"Ctrl+F3",\n            "name":"shots_fired_toggle_visibility",\n            "title":"Show In-Game",\n            "virtualKeycode":114, //F3\n            "modifierKeys":2, //Ctrl\n            "binding": "Ctrl+F3",\n            "extension-uid":"jdecmlblpoddjcmpdbhnefehffjfcjeijpkebedd",\n            "isPassthrough":false,\n            "hold":false,\n            "IsUnassigned":false\n        }\n        ],\n        "21620":[ // Legends of Runeterra\n        {\n            "binding":"Ctrl+F3",\n            "name":"shots_fired_toggle_visibility",\n            "title":"Show In-Game",\n            "virtualKeycode":114, //F3\n            "modifierKeys":2, //Ctrl\n            "binding": "Ctrl+F3",\n            "extension-uid":"jdecmlblpoddjcmpdbhnefehffjfcjeijpkebedd",\n            "isPassthrough":false,\n            "hold":false,\n            "IsUnassigned":false\n        }\n        ]\n    }\n}\n')),(0,r.mdx)("h4",{id:"notes-1"},"Notes"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},'The "binding" field that the callback returns gives you a human-readable hotkey name. ("Ctrl+F3" for example)'),(0,r.mdx)("li",{parentName:"ul"},"The callback returns a virtualKeycode and a modifierKey code. You can convert these values easily to a string using the ",(0,r.mdx)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/dotnet/api/system.windows.input.modifierkeys"},"MS ModifierKeys Enum")," and the ",(0,r.mdx)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/uwp/api/windows.system.virtualkey"},"MS VirtualKey Enum"),"."),(0,r.mdx)("li",{parentName:"ul"},"If several modifier keys are assigned (like Ctrl + Shift), the ",(0,r.mdx)("inlineCode",{parentName:"li"},"modifierKeys")," is the sum of all the modifier values (e.g. Alt + Shift would be 5)")),(0,r.mdx)("h4",{id:"callback-example-with-global-hotkeys"},"Callback example with global hotkeys"),(0,r.mdx)("p",null,"For extensions that target more than one game (global apps), there is an option that available in the OW client UI, to set an extension hotkey as ",(0,r.mdx)("inlineCode",{parentName:"p"},"global"),".",(0,r.mdx)("br",{parentName:"p"}),"\n","Read more about global hotkeys ",(0,r.mdx)("a",{parentName:"p",href:"/topics/best-practices/hotkeys-best-practices#global-hotkeys"},"here"),".  "),(0,r.mdx)("p",null,"On the following example, you can see that the current extension set ",(0,r.mdx)("inlineCode",{parentName:"p"},"Shift + F5")," as a global hotkey for all the installed games: "),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{ \n    "success":true,\n    "globals":[ \n    { \n         "binding":"Ctrl+F3",\n         "name":"toggle_app",\n         "title":"Show/Hide Buff window",\n         "virtualKeycode":116, //F5\n         "modifierKeys":4, //Shift\n         "extension-uid":"caboggillkkpgkiokbjmgldfkedbfnpkgadakcdl",\n         "isPassthrough":false,\n         "hold":false,\n         "IsUnassigned":false\n    }\n    ]\n}\n')),(0,r.mdx)("p",null,"On the following example, you can see that the current extension set ",(0,r.mdx)("inlineCode",{parentName:"p"},"Shift + F5"),' as a global hotkey for all the installed games,except "League of Legends", which set with ',(0,r.mdx)("inlineCode",{parentName:"p"},"Ctrl +D"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{ \n    "success":true,\n    "globals":[ \n    { \n         "binding":"Ctrl+F3",\n         "name":"toggle_app",\n         "title":"Show/Hide Buff window",\n         "virtualKeycode":116, //F5\n         "modifierKeys":4, //Shift\n         "extension-uid":"caboggillkkpgkiokbjmgldfkedbfnpkgadakcdl",\n         "isPassthrough":false,\n         "hold":false,\n         "IsUnassigned":false\n    }\n    ],\n    "games":{ \n        "5426":[ \n        { \n            "binding":"Ctrl+F3",\n            "name":"toggle_app",\n            "title":"Show/Hide Buff window",\n            "virtualKeycode":68, //D\n            "modifierKeys":2, //Ctrl\n            "extension-uid":"caboggillkkpgkiokbjmgldfkedbfnpkgadakcdl",\n            "isPassthrough":false,\n            "hold":false,\n            "IsUnassigned":false\n        }\n        ]\n    }\n}\n')),(0,r.mdx)("h2",{id:"onholdevent-object"},"OnHoldEvent Object"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"name"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"state"),(0,r.mdx)("td",{parentName:"tr",align:null},'string ("down"/"up\')'),(0,r.mdx)("td",{parentName:"tr",align:null})))),(0,r.mdx)("h4",{id:"event-data-example"},"Event data example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{"name": "ges_showhide", "state": "down"}\n')),(0,r.mdx)("h2",{id:"onpressedevent-object"},"OnPressedEvent Object"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"name"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})))),(0,r.mdx)("h4",{id:"event-data-example-1"},"Event data example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{"name": "ges_showhide", "state": "down"}\n')),(0,r.mdx)("h2",{id:"onchangedevent-object"},"OnChangedEvent Object"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"name"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"gameId"),(0,r.mdx)("td",{parentName:"tr",align:null},"number"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"description"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"binding"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})))),(0,r.mdx)("h4",{id:"event-data-example-2"},"Event data example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{ \n   "name":"toggle_app",\n   "gameId":10906,\n   "description":"Buff Achievement Tracker: Show/Hide Buff window",\n   "binding":"Shift+F4" //the new hotkey\n}\n')),(0,r.mdx)("h2",{id:"assignhotkeyobject-object"},"AssignHotkeyObject Object"),(0,r.mdx)("h4",{id:"version-added-0160-2"},"Version added: 0.160"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Container for assigned hotkey properties.")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"name"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"gameId"),(0,r.mdx)("td",{parentName:"tr",align:null},"number"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"modifiers"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#hotkeymodifiers-object"},"HotkeyModifiers")," object"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"virtualKey"),(0,r.mdx)("td",{parentName:"tr",align:null},"number"),(0,r.mdx)("td",{parentName:"tr",align:null})))),(0,r.mdx)("h2",{id:"unassignhotkeyobject-object"},"UnassignHotkeyObject Object"),(0,r.mdx)("h4",{id:"version-added-0160-3"},"Version added: 0.160"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Container for unassigned hotkey properties.")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"name"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"gameId (optional)"),(0,r.mdx)("td",{parentName:"tr",align:null},"number"),(0,r.mdx)("td",{parentName:"tr",align:null})))),(0,r.mdx)("h2",{id:"hotkeymodifiers-object"},"HotkeyModifiers Object"),(0,r.mdx)("h4",{id:"version-added-0160-4"},"Version added: 0.160"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Container for hotkey modifiers.")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"ctrl"),(0,r.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"alt"),(0,r.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"shift"),(0,r.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,r.mdx)("td",{parentName:"tr",align:null})))))}g.isMDXComponent=!0}}]);