"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6955],{35318:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>p,MDXProvider:()=>g,mdx:()=>d,useMDXComponents:()=>c,withMDXComponents:()=>u});var r=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){return function(t){var n=c(t.components);return r.createElement(e,i({},t,{components:n}))}},c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},g=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=o,m=u["".concat(a,".").concat(g)]||u[g]||f[g]||i;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=v;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},62260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(25773),o=(n(27378),n(35318));const i={id:"plugins-overview",image:"/img/embed/api-best-practices.jpg",title:"Overwolf Plug-ins overview",sidebar_label:"Plugins overview",sidebar_custom_props:{overwolf_platform:!0,electron_platform:!1}},a=void 0,s={unversionedId:"topics/using-plugins/plugins-overview",id:"topics/using-plugins/plugins-overview",title:"Overwolf Plug-ins overview",description:"A plug-in is a .NET class library (DLL) that can contain functions, events or properties written in a .NET language. Your app can call on the plugin\u2019s contents from within the context of the Javascript.",source:"@site/pages/docs/topics/using-plugins/plugins-overview.mdx",sourceDirName:"topics/using-plugins",slug:"/topics/using-plugins/plugins-overview",permalink:"/topics/using-plugins/plugins-overview",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/website/pages/docs/topics/using-plugins/plugins-overview.mdx",tags:[],version:"current",lastUpdatedBy:"Oded Itkin",lastUpdatedAt:1667999405,formattedLastUpdatedAt:"Nov 9, 2022",frontMatter:{id:"plugins-overview",image:"/img/embed/api-best-practices.jpg",title:"Overwolf Plug-ins overview",sidebar_label:"Plugins overview",sidebar_custom_props:{overwolf_platform:!0,electron_platform:!1}},sidebar:"topics",previous:{title:"Plug-in Implementation",permalink:"/topics/using-plugins/how-to-use-plugins-in-your-app"},next:{title:"Process Manager plugin",permalink:"/topics/using-plugins/process-manager-plugin"}},l={},p=[],u={toc:p};function c(e){let{components:t,...n}=e;return(0,o.mdx)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"A plug-in is a .NET class library (DLL) that can contain functions, events or properties written in a .NET language. Your app can call on the plugin\u2019s contents from within the context of the Javascript."),(0,o.mdx)("p",null,"The Overwolf plugin system allows your app to:"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Implement functionality that is missing from the basic Overwolf API including local file access, networking, playing audio, integration with 3rd party libraries, etc."),(0,o.mdx)("li",{parentName:"ol"},"Leverage existing C#/C/C++ code and use it in your app. This is somewhat similar to ",(0,o.mdx)("a",{parentName:"li",href:"https://blog.risingstack.com/writing-native-node-js-modules/"},"Native Node.js Modules"),", however we do not yet support Node.js modules. ")),(0,o.mdx)("p",null,"We've created a few simple plugins that might answer your needs as an app developer or give you a good starting point for developing your own, you can find them in the ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/overwolf/overwolf-plugins"},"Overwolf GitHub repository"),"."))}c.isMDXComponent=!0}}]);