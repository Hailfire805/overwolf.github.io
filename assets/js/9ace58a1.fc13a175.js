"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8308],{35318:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(27378);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,m=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(a),k=l,c=u["".concat(m,".").concat(k)]||u[k]||d[k]||r;return a?n.createElement(c,o(o({ref:t},s),{},{components:a})):n.createElement(c,o({ref:t},s))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=k;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i[u]="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},9930:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>k,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var n=a(25773),l=(a(27378),a(35318));const r={id:"counter-strike-2",image:"/img/embed/games/counter-strike-2.jpg",title:"Counter Strike 2 Game events",hide_title:!0,sidebar_label:"Counter Strike 2",sidebar_position:0,sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!1}}},o=void 0,i={unversionedId:"api/live-game-data/supported-games/counter-strike-2",id:"api/live-game-data/supported-games/counter-strike-2",title:"Counter Strike 2 Game events",description:"Please read the overwolf.games.events documentation page to learn how to use Overwolf game events.",source:"@site/pages/docs/api/live-game-data/supported-games/counter-strike-2.mdx",sourceDirName:"api/live-game-data/supported-games",slug:"/api/live-game-data/supported-games/counter-strike-2",permalink:"/api/live-game-data/supported-games/counter-strike-2",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/website/pages/docs/api/live-game-data/supported-games/counter-strike-2.mdx",tags:[],version:"current",lastUpdatedBy:"OdedItkinOW",lastUpdatedAt:1696341477,formattedLastUpdatedAt:"Oct 3, 2023",sidebarPosition:0,frontMatter:{id:"counter-strike-2",image:"/img/embed/games/counter-strike-2.jpg",title:"Counter Strike 2 Game events",hide_title:!0,sidebar_label:"Counter Strike 2",sidebar_position:0,sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!1}}},sidebar:"api",previous:{title:"Call of Duty: Warzone Caldera",permalink:"/api/live-game-data/supported-games/call-of-duty-warzone-caldera"},next:{title:"Counter-Strike: Global Offensive",permalink:"/api/live-game-data/supported-games/counter-strike-global-offensive"}},m={},p=[{value:"Sample Apps",id:"sample-apps",level:2},{value:"Available Features",id:"available-features",level:2},{value:"Game event status",id:"game-event-status",level:2},{value:"<code>gep_internal</code>",id:"gep_internal",level:2},{value:"Info Updates",id:"info-updates",level:3},{value:"<em>gep_internal</em> note",id:"gep_internal-note",level:4},{value:"<code>match_info</code>",id:"match_info",level:2},{value:"Info Updates",id:"info-updates-1",level:3},{value:"<em>roster</em> note",id:"roster-note",level:4},{value:"<em>game_mode</em> note",id:"game_mode-note",level:4},{value:"<em>match_outcome</em> note",id:"match_outcome-note",level:4},{value:"Events",id:"events",level:3},{value:"<em>match_start</em> note",id:"match_start-note",level:4},{value:"<em>match_end</em> note",id:"match_end-note",level:4},{value:"<em>kill</em> note",id:"kill-note",level:4},{value:"<em>death</em> note",id:"death-note",level:4},{value:"<em>assist</em> note",id:"assist-note",level:4},{value:"<em>kill_feed</em> note",id:"kill_feed-note",level:4}],s=(u="GameInfo",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)});var u;const d={toc:p};function k(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("head",null,(0,l.kt)("meta",{name:"keywords",content:"API for Counter Strike 2, Counter Strike 2 API, SDK for Counter Strike 2, Counter Strike 2 SDK"})),(0,l.kt)(s,{gameId:22730,page:"docs",mdxType:"GameInfo"}),(0,l.kt)("p",null,"Please read the ",(0,l.kt)("a",{parentName:"p",href:"/api/live-game-data"},"overwolf.games.events")," documentation page to learn how to use Overwolf game events."),(0,l.kt)("h2",{id:"sample-apps"},"Sample Apps"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/overwolf/events-sample-app"},"Counter Strike 2 game events sample app"))),(0,l.kt)("h2",{id:"available-features"},"Available Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#gep_internal"},"gep_internal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#match_info"},"match_info"))),(0,l.kt)("h2",{id:"game-event-status"},"Game event status"),(0,l.kt)("p",null,"It is highly recommended to communicate errors and warnings to app users. "),(0,l.kt)("p",null,"Check the current game event status ",(0,l.kt)("a",{parentName:"p",href:"/status/"},"here"),". Alternately, you can easily check that status from your app itself, ",(0,l.kt)("a",{parentName:"p",href:"/topics/using-events/how-to-check-events-status-from-app"},"using our API"),"."),(0,l.kt)("h2",{id:"gep_internal"},(0,l.kt)("inlineCode",{parentName:"h2"},"gep_internal")),(0,l.kt)("h3",{id:"info-updates"},"Info Updates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"key"),(0,l.kt)("th",{parentName:"tr",align:null},"Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"gep_internal"),(0,l.kt)("td",{parentName:"tr",align:null},"gep_internal"),(0,l.kt)("td",{parentName:"tr",align:null},"Local + Public version number"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#gep_internal-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"143.0")))),(0,l.kt)("h4",{id:"gep_internal-note"},(0,l.kt)("em",{parentName:"h4"},"gep_internal")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"gep_internal":{"version_info":"{"local_version":"157.0.1","public_version":"157.0.1","is_updated":true}"}},"feature":"gep_internal"}\n')),(0,l.kt)("h2",{id:"match_info"},(0,l.kt)("inlineCode",{parentName:"h2"},"match_info")),(0,l.kt)("h3",{id:"info-updates-1"},"Info Updates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"key"),(0,l.kt)("th",{parentName:"tr",align:null},"Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"roster_"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"Data about all the players in the roster"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#roster-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"236.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"game_mode"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"The current played game mode and the map name"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#game_mode-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"236.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"match_outcome"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"victory / defeat / tie"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#match_outcome-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"236.0")))),(0,l.kt)("h4",{id:"roster-note"},(0,l.kt)("em",{parentName:"h4"},"roster")," note"),(0,l.kt)("p",null,"List of possible values: "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"nickname - The nickname of the player"),(0,l.kt)("li",{parentName:"ul"},"steamid - The player's steam Id"),(0,l.kt)("li",{parentName:"ul"},"money - current money owned by the player"),(0,l.kt)("li",{parentName:"ul"},"kills - current player's kills"),(0,l.kt)("li",{parentName:"ul"},"assists - current player's assists"),(0,l.kt)("li",{parentName:"ul"},"deaths - current player's deaths"),(0,l.kt)("li",{parentName:"ul"},"mvps - current player's mvps number "),(0,l.kt)("li",{parentName:"ul"},"score - current player's score"),(0,l.kt)("li",{parentName:"ul"},"is_local - If the player is the local player the value will be true, if not it will be false"),(0,l.kt)("li",{parentName:"ul"},"ping - the ping of the player")),(0,l.kt)("p",null,"Data example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"feature":"match_info","category":"match_info","key":"roster_1","value":"{\\"nickname\\":\\"Naco\\",\\"steamid\\":"76561199123132960",\\"money\\":0,\\"kills\\":0,\\"assists\\":0,\\"deaths\\":0,\\"mvps\\":0,\\"score\\":0,\\"is_local\\":\\"true\\",\\"ping\\":0}"}\n')),(0,l.kt)("h4",{id:"game_mode-note"},(0,l.kt)("em",{parentName:"h4"},"game_mode")," note"),(0,l.kt)("p",null,"Data examples:"),(0,l.kt)("p",null,'Competitive mode on "Dust II" map'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"feature":"match_info","category":"match_info","key":"game_mode","value":"Competitive Dust II"}\n')),(0,l.kt)("p",null,'VS BOTS on "Dust II" map'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"feature":"match_info","category":"match_info","key":"game_mode","value":"Offline Deathmatch Dust II"}\n')),(0,l.kt)("p",null,'Community Server, "Causal" mode and server name'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"feature":"match_info","category":"match_info","key":"game_mode","value":"Community Casual surf_ski_2_GO_sw"}\n')),(0,l.kt)("p",null,'"Casual" mode on "Dust II" map'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"feature":"match_info","category":"match_info","key":"game_mode","value":"Casual Dust II"}\n')),(0,l.kt)("p",null,'Spectating "Casual" mode on "Dust II" map'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"feature":"match_info","category":"match_info","key":"game_mode","value":"Dust II"}\n')),(0,l.kt)("h4",{id:"match_outcome-note"},(0,l.kt)("em",{parentName:"h4"},"match_outcome")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"match_outcome":"victory"}},"feature":"match_info"}\n{"info":{"match_info":{"match_outcome":"defeat"}},"feature":"match_info"}\n')),(0,l.kt)("h3",{id:"events"},"Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Event"),(0,l.kt)("th",{parentName:"tr",align:null},"Event Data"),(0,l.kt)("th",{parentName:"tr",align:null},"Fired When"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"match_start"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"In the beginning of each match"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#match_start-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"228.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"match_end"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"At the end of each match"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#match_end-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"228.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"kill"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"When the player kill another player"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#kill-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"235.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"death"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"When the player dies"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#death-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"235.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"assist"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"When the player assist a team member to kill an enemy"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#assist-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"235.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"kill_feed"),(0,l.kt)("td",{parentName:"tr",align:null},"Kills & assists information"),(0,l.kt)("td",{parentName:"tr",align:null},"Anytime a player dies in match."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#kill_feed-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"236.0")))),(0,l.kt)("h4",{id:"match_start-note"},(0,l.kt)("em",{parentName:"h4"},"match_start")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"match_start","data":""}]}\n')),(0,l.kt)("h4",{id:"match_end-note"},(0,l.kt)("em",{parentName:"h4"},"match_end")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"match_end","data":""}]}\n')),(0,l.kt)("h4",{id:"kill-note"},(0,l.kt)("em",{parentName:"h4"},"kill")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"kill","data":""}]}\n')),(0,l.kt)("h4",{id:"death-note"},(0,l.kt)("em",{parentName:"h4"},"death")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"death","data":""}]}\n')),(0,l.kt)("h4",{id:"assist-note"},(0,l.kt)("em",{parentName:"h4"},"assist")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"assist","data":""}]}\n')),(0,l.kt)("h4",{id:"kill_feed-note"},(0,l.kt)("em",{parentName:"h4"},"kill_feed")," note"),(0,l.kt)("p",null,"List of possible values: "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"attacker - attacker name"),(0,l.kt)("li",{parentName:"ul"},"assister - assister name"),(0,l.kt)("li",{parentName:"ul"},"victim - victim name"),(0,l.kt)("li",{parentName:"ul"},"weapon - used weapon name"),(0,l.kt)("li",{parentName:"ul"},"list of metadata with true / false data",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"headshot"),(0,l.kt)("li",{parentName:"ul"},"suicide"),(0,l.kt)("li",{parentName:"ul"},"wallbang"),(0,l.kt)("li",{parentName:"ul"},"flashed"),(0,l.kt)("li",{parentName:"ul"},"throughsmoke"),(0,l.kt)("li",{parentName:"ul"},"noscope"),(0,l.kt)("li",{parentName:"ul"},"domination"),(0,l.kt)("li",{parentName:"ul"},"revenge")))),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\\"attacker\\":\\"BOT Efe\\",\\"assister\\":\\"\\",\\"weapon\\":\\"m4a1_silencer\\",\\"headshot\\":false,\\"suicide\\":false,\\"wallbang\\":false,\\"revenge\\":false,\\"domination\\":false,\\"noscope\\":false,\\"throughsmoke\\":false,\\"flashed\\":false,\\"victim\\":\\"BOT Yanni\\"}\n')))}k.isMDXComponent=!0}}]);