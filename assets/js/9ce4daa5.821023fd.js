"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8050],{3905:function(e,n,t){t.r(n),t.d(n,{MDXContext:function(){return s},MDXProvider:function(){return m},mdx:function(){return g},useMDXComponents:function(){return p},withMDXComponents:function(){return c}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(){return i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},i.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){return function(n){var t=p(n.components);return r.createElement(e,i({},n,{components:t}))}},p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),c=p(t),m=o,f=c["".concat(a,".").concat(m)]||c[m]||d[m]||i;return t?r.createElement(f,l(l({ref:n},s),{},{components:t})):r.createElement(f,l({ref:n},s))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},19084:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],l={id:"writing-your-own-plugin",title:"Writing your own Overwolf plugin",sidebar_label:"Write your own plugin"},u=void 0,s={unversionedId:"topics/using-plugins/writing-your-own-plugin",id:"topics/using-plugins/writing-your-own-plugin",title:"Writing your own Overwolf plugin",description:"It's entirely possible for you to create new plug-ins for your needs, just follow these basic rules:",source:"@site/pages/docs/topics/using-plugins/writing-your-own-plugin.mdx",sourceDirName:"topics/using-plugins",slug:"/topics/using-plugins/writing-your-own-plugin",permalink:"/topics/using-plugins/writing-your-own-plugin",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/website/pages/docs/topics/using-plugins/writing-your-own-plugin.mdx",tags:[],version:"current",lastUpdatedBy:"Oded Itkin",lastUpdatedAt:1657711065,formattedLastUpdatedAt:"7/13/2022",frontMatter:{id:"writing-your-own-plugin",title:"Writing your own Overwolf plugin",sidebar_label:"Write your own plugin"},sidebar:"topics",previous:{title:"TeamSpeak plugin",permalink:"/topics/using-plugins/team-speak-plugin"},next:{title:"Windows Communication",permalink:"/topics/using-windows-api/communicating-between-windows"}},c={},p=[{value:"1. Implement the Overwolf interface",id:"1-implement-the-overwolf-interface",level:2},{value:"2. Make your public functions accessible",id:"2-make-your-public-functions-accessible",level:2},{value:"3. Implement asynchronous functions",id:"3-implement-asynchronous-functions",level:2}],m={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.mdx)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"It's entirely possible for you to create new plug-ins for your needs, just follow these basic rules:"),(0,i.mdx)("h2",{id:"1-implement-the-overwolf-interface"},"1. Implement the Overwolf interface"),(0,i.mdx)("p",null,"Create a .NET class library that implements a public constructor. When you call for overwolf.extensions.current.getExtraObject from Javascript, it will create an instance of your plugin and call on it\u2019s constructor."),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"It should be an empty constructor or a constructor that accepts an int variable (specifically, the Win32 window handle for the app window hosting your plugin)."),(0,i.mdx)("li",{parentName:"ul"},"Your class library can contain multiple classes \u2013 however you will need a new \u201cextra-object\u201d entry for each class with a unique name.")),(0,i.mdx)("h2",{id:"2-make-your-public-functions-accessible"},"2. Make your public functions accessible"),(0,i.mdx)("p",null,"Any public function, property or event will be accessible to your Javascript code automatically if it's in your class. Global events should look like: ",(0,i.mdx)("inlineCode",{parentName:"p"},"public event Action<object, object> onMyEvent")," (where you can pass any number of object parameters)."),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Your app will crash if it will try to load a plugin that declares a public event of a different form or which doesn\u2019t pass objects.")),(0,i.mdx)("h2",{id:"3-implement-asynchronous-functions"},"3. Implement asynchronous functions"),(0,i.mdx)("p",null,"Our best practice is to implement asynchronous-only functions that accept a callback function triggered by completion:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"public void add(int x, int y, Action<object> callback)\n")),(0,i.mdx)("div",{className:"admonition admonition-important alert alert--info"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("ul",{parentName:"div"},(0,i.mdx)("li",{parentName:"ul"},"Overwolf version 116.2 and all later versions will only support 64 bit CPUs, and therefore you\u2019ll be required to compile your .DLL to target the x64 platform."),(0,i.mdx)("li",{parentName:"ul"},"It is recommended that plugin DLLs be compiled with the .NET 4.8 framework (using a higher/lower framework version might lead to unexpected behaviors)")))),(0,i.mdx)("p",null,"We recommend you take a look at the ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/overwolf/overwolf-plugin-sample"},"overwolf-plugin-sample")," or ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/overwolf/plugins"},"overwolf-plugins")," entry to get a quick start on developing your own plugins."))}d.isMDXComponent=!0}}]);