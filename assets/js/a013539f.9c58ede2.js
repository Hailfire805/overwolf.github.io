"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4782],{3905:function(e,n,a){a.r(n),a.d(n,{MDXContext:function(){return i},MDXProvider:function(){return s},mdx:function(){return h},useMDXComponents:function(){return p},withMDXComponents:function(){return u}});var t=a(67294);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},r.apply(this,arguments)}function d(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function m(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?d(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):d(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=t.createContext({}),u=function(e){return function(n){var a=p(n.components);return t.createElement(e,r({},n,{components:a}))}},p=function(e){var n=t.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):m(m({},n),e)),a},s=function(e){var n=p(e.components);return t.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},x=t.forwardRef((function(e,n){var a=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),u=p(a),s=l,x=u["".concat(d,".").concat(s)]||u[s]||c[s]||r;return a?t.createElement(x,m(m({ref:n},i),{},{components:a})):t.createElement(x,m({ref:n},i))}));function h(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=a.length,d=new Array(r);d[0]=x;var m={};for(var o in n)hasOwnProperty.call(n,o)&&(m[o]=n[o]);m.originalType=e,m.mdxType="string"==typeof e?e:l,d[1]=m;for(var i=2;i<r;i++)d[i]=a[i];return t.createElement.apply(null,d)}return t.createElement.apply(null,a)}x.displayName="MDXCreateElement"},88301:function(e,n,a){a.r(n),a.d(n,{assets:function(){return p},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return s}});var t,l=a(87462),r=a(63366),d=(a(67294),a(3905)),m=["components"],o={id:"hearthstone",title:"Hearthstone Game events",hide_title:!0,sidebar_label:"Hearthstone"},i=void 0,u={unversionedId:"api/games/events/hearthstone",id:"api/games/events/hearthstone",title:"Hearthstone Game events",description:"Please read the overwolf.games.events documentation page to learn how to use Overwolf game events.",source:"@site/pages/docs/api/games/events/hearthstone.mdx",sourceDirName:"api/games/events",slug:"/api/games/events/hearthstone",permalink:"/api/games/events/hearthstone",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/website/pages/docs/api/games/events/hearthstone.mdx",tags:[],version:"current",lastUpdatedBy:"Oded Itkin",lastUpdatedAt:1657792208,formattedLastUpdatedAt:"7/14/2022",frontMatter:{id:"hearthstone",title:"Hearthstone Game events",hide_title:!0,sidebar_label:"Hearthstone"},sidebar:"api",previous:{title:"Halo Infinite",permalink:"/api/games/events/halo-infinite"},next:{title:"Heroes of the Storm",permalink:"/api/games/events/heroes-of-the-storm"}},p={},s=[{value:"Sample Apps",id:"sample-apps",level:2},{value:"Available Features",id:"available-features",level:2},{value:"Game events status",id:"game-events-status",level:2},{value:"<code>gep_internal</code>",id:"gep_internal",level:2},{value:"Info Updates",id:"info-updates",level:3},{value:"<em>gep_internal</em> note",id:"gep_internal-note",level:4},{value:"<code>collection</code>",id:"collection",level:2},{value:"Info Updates",id:"info-updates-1",level:3},{value:"<em>collection</em> note",id:"collection-note",level:4},{value:"<code>scene_state</code>",id:"scene_state",level:2},{value:"Info Updates",id:"info-updates-2",level:3},{value:"<em>scene_state</em> note",id:"scene_state-note",level:4},{value:"<code>decks</code>",id:"decks",level:2},{value:"Info Updates",id:"info-updates-3",level:3},{value:"<em>deck_id</em> note",id:"deck_id-note",level:4},{value:"<em>selected_deck</em> note",id:"selected_deck-note",level:4},{value:"<em>adventure deck</em> note",id:"adventure-deck-note",level:4},{value:"<em>adventure_loot_options</em> note",id:"adventure_loot_options-note",level:4},{value:"<code>match</code>",id:"match",level:2},{value:"Info Updates",id:"info-updates-4",level:3},{value:"<em>localPlayer</em> note",id:"localplayer-note",level:4},{value:"<em>opponent</em> note",id:"opponent-note",level:4},{value:"<em>match_type</em> note",id:"match_type-note",level:4},{value:"<em>battlegrounds_rating</em> note",id:"battlegrounds_rating-note",level:4},{value:"<em>adventure_stats</em> note",id:"adventure_stats-note",level:4},{value:"Events",id:"events",level:3},{value:"<em>match_start</em> note",id:"match_start-note",level:4},{value:"<em>match_end</em> note",id:"match_end-note",level:4},{value:"<em>match_outcome</em> note",id:"match_outcome-note",level:4},{value:"<code>match_info</code>",id:"match_info",level:2},{value:"Info Updates",id:"info-updates-5",level:3},{value:"<em>pseudo_match_id</em> note",id:"pseudo_match_id-note",level:4},{value:"<code>arena</code>",id:"arena",level:2},{value:"Info Updates",id:"info-updates-6",level:3},{value:"<em>arena_draft</em> note",id:"arena_draft-note",level:4}],c=(t="GameInfo",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,d.mdx)("div",e)}),x={toc:s};function h(e){var n=e.components,a=(0,r.Z)(e,m);return(0,d.mdx)("wrapper",(0,l.Z)({},x,a,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)("head",null,(0,d.mdx)("meta",{name:"keywords",content:"API for Hearthstone, Hearthstone API, SDK for Hearthstone, Hearthstone SDK"})),(0,d.mdx)(c,{gameID:9898,showCompliance:!0,showDocs:!1,mdxType:"GameInfo"}),(0,d.mdx)("p",null,"Please read the ",(0,d.mdx)("a",{parentName:"p",href:"."},"overwolf.games.events")," documentation page to learn how to use Overwolf game events."),(0,d.mdx)("h2",{id:"sample-apps"},"Sample Apps"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://github.com/overwolf/events-sample-apps"},"Hearthstone game events sample app"))),(0,d.mdx)("h2",{id:"available-features"},"Available Features"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#gep_internal"},"gep_internal")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#scene_state"},"scene_state")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#collection"},"collection")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#decks"},"decks")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#match"},"match")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#match_info"},"match-info")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#arena"},"arena"))),(0,d.mdx)("h2",{id:"game-events-status"},"Game events status"),(0,d.mdx)("p",null,"It is highly recommended to communicate errors and warnings to your app users. Check game event status ",(0,d.mdx)("a",{parentName:"p",href:"/status/"},"here"),", or easily check game events status from your app ",(0,d.mdx)("a",{parentName:"p",href:"/topics/using-events/how-to-check-events-status-from-app"},"using our API"),"."),(0,d.mdx)("h2",{id:"gep_internal"},(0,d.mdx)("inlineCode",{parentName:"h2"},"gep_internal")),(0,d.mdx)("h3",{id:"info-updates"},"Info Updates"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"key"),(0,d.mdx)("th",{parentName:"tr",align:null},"Category"),(0,d.mdx)("th",{parentName:"tr",align:null},"Values"),(0,d.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,d.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"gep_internal"),(0,d.mdx)("td",{parentName:"tr",align:null},"gep_internal"),(0,d.mdx)("td",{parentName:"tr",align:null},"Local + Public version number"),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#gep_internal-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"143.0")))),(0,d.mdx)("h4",{id:"gep_internal-note"},(0,d.mdx)("em",{parentName:"h4"},"gep_internal")," note"),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"info":{"gep_internal":{"version_info":"{"local_version":"157.0.1","public_version":"157.0.1","is_updated":true}"}},"feature":"gep_internal"}\n')),(0,d.mdx)("h2",{id:"collection"},(0,d.mdx)("inlineCode",{parentName:"h2"},"collection")),(0,d.mdx)("h3",{id:"info-updates-1"},"Info Updates"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"key"),(0,d.mdx)("th",{parentName:"tr",align:null},"Category"),(0,d.mdx)("th",{parentName:"tr",align:null},"Values"),(0,d.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,d.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"collection"),(0,d.mdx)("td",{parentName:"tr",align:null},"game_info"),(0,d.mdx)("td",{parentName:"tr",align:null},"Current card collection of the local player."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#collection-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"117.1")))),(0,d.mdx)("h4",{id:"collection-note"},(0,d.mdx)("em",{parentName:"h4"},"collection")," note"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"The \u201ccollection\u201d  data is available as soon as the player logs into Hearthstone."),(0,d.mdx)("li",{parentName:"ul"},"The collection is updated whenever the user adds/removes a card.")),(0,d.mdx)("p",null,'Example for cards "collection":'),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{ CS2_065: "{"id" : "CS2_065", "count" : "1", "premiumCount" : "0" }",\n  CS1_113: "{"id" : "CS1_113", "count" : "2", "premiumCount" : "0" }",\n  NEW1_011: "{"id" : "NEW1_011", "count" : "2", "premiumCount" : "0" }",\n  EX1_131: "{"id" : "EX1_131", "count" : "1", "premiumCount" : "2" }",\n  CS2_121: "{"id" : "CS2_121", "count" : "2", "premiumCount" : "0" }",\n  \u2026\n}\n')),(0,d.mdx)("p",null,'"Card" structure:'),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},'{\n  "id" : "card_id" ,\n  "count" : "int" ,\n  "premiumCount" : "int"\n}  ')),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"\u201cid\u201d \u2013 The ",(0,d.mdx)("a",{parentName:"li",href:"http://metastats.net/allcards/"},"card\u2019s id")),(0,d.mdx)("li",{parentName:"ul"},"\u201ccount\u201d \u2013 The number of regular cards"),(0,d.mdx)("li",{parentName:"ul"},"\u201cpremiumCount\u201d \u2013 The number of premium (golden) cards")),(0,d.mdx)("h2",{id:"scene_state"},(0,d.mdx)("inlineCode",{parentName:"h2"},"scene_state")),(0,d.mdx)("h3",{id:"info-updates-2"},"Info Updates"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"key"),(0,d.mdx)("th",{parentName:"tr",align:null},"Category"),(0,d.mdx)("th",{parentName:"tr",align:null},"Values"),(0,d.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,d.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"scene_state"),(0,d.mdx)("td",{parentName:"tr",align:null},"game_info"),(0,d.mdx)("td",{parentName:"tr",align:null},"Current game scene."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#scene_state-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"117.1")))),(0,d.mdx)("h4",{id:"scene_state-note"},(0,d.mdx)("em",{parentName:"h4"},"scene_state")," note"),(0,d.mdx)("p",null,"Can be one of the following:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"scene_startup"),(0,d.mdx)("li",{parentName:"ul"},"scene_login"),(0,d.mdx)("li",{parentName:"ul"},"scene_hub"),(0,d.mdx)("li",{parentName:"ul"},"scene_gameplay"),(0,d.mdx)("li",{parentName:"ul"},"scene_collectionmanager"),(0,d.mdx)("li",{parentName:"ul"},"scene_packs"),(0,d.mdx)("li",{parentName:"ul"},"scene_tournament"),(0,d.mdx)("li",{parentName:"ul"},"scene_friendly"),(0,d.mdx)("li",{parentName:"ul"},"scene_fatal_error"),(0,d.mdx)("li",{parentName:"ul"},"scene_draft"),(0,d.mdx)("li",{parentName:"ul"},"scene_credits"),(0,d.mdx)("li",{parentName:"ul"},"scene_reset"),(0,d.mdx)("li",{parentName:"ul"},"scene_adventure"),(0,d.mdx)("li",{parentName:"ul"},"scene_tavern_brawl")),(0,d.mdx)("h2",{id:"decks"},(0,d.mdx)("inlineCode",{parentName:"h2"},"decks")),(0,d.mdx)("h3",{id:"info-updates-3"},"Info Updates"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"key"),(0,d.mdx)("th",{parentName:"tr",align:null},"Category"),(0,d.mdx)("th",{parentName:"tr",align:null},"Values"),(0,d.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,d.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"[deck_id]"),(0,d.mdx)("td",{parentName:"tr",align:null},"decks"),(0,d.mdx)("td",{parentName:"tr",align:null},"The \u201cdecks\u201d feature provides data about the currently \u201cvisible\u201d decks."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#deck_id-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"119.1")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"selected_deck"),(0,d.mdx)("td",{parentName:"tr",align:null},"selected_deck"),(0,d.mdx)("td",{parentName:"tr",align:null},"The selected deck."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#selected_deck-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"119.1")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"Adventure Deck"),(0,d.mdx)("td",{parentName:"tr",align:null},"decks"),(0,d.mdx)("td",{parentName:"tr",align:null},"The currently played deck on adventure mode."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#Adventure-Deck-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"143.0")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"adventure_loot_options"),(0,d.mdx)("td",{parentName:"tr",align:null},"decks"),(0,d.mdx)("td",{parentName:"tr",align:null},"The currently offered 3-option draft (between bosses)"),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#adventure_loot_options-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"143.0")))),(0,d.mdx)("h4",{id:"deck_id-note"},(0,d.mdx)("em",{parentName:"h4"},"deck_id")," note"),(0,d.mdx)("p",null,"The key is the deck's ",(0,d.mdx)("inlineCode",{parentName:"p"},"deck_id"),' string. It is not the literal string "deck_id". See example below.'),(0,d.mdx)("p",null,"Decks are \u201cvisible\u201d when the local player starts a new game, during the \u201cdeck selection\u201d screen, or when the local player enters the \u201cMy Collection\u201d menu. The following data is being provided for each deck:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"Deck name / id"),(0,d.mdx)("li",{parentName:"ul"},"Deck cards (array of cards)"),(0,d.mdx)("li",{parentName:"ul"},"Deck key")),(0,d.mdx)("p",null,"\u201cCard\u201d structure:"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},'{\n  "id" : "card_id",\n  "count" : "int",\n  "premiumCount" : "int"\n}  ')),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"\u201cid\u201d \u2013 The ",(0,d.mdx)("a",{parentName:"li",href:"http://metastats.net/allcards/"},"card's id")),(0,d.mdx)("li",{parentName:"ul"},"\u201ccount\u201d \u2013 The number of regular cards"),(0,d.mdx)("li",{parentName:"ul"},"\u201cpremiumCount\u201d \u2013 The number of premium (golden) cards")),(0,d.mdx)("p",null,"Example for a \u201cdeck_id\u201d info-update structure:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "info":{\n    "decks":{\n      "Mage":"{\n        \\"deck_id\\":\\"Mage\\",\n          \\"cards\\":[\n            {\\"id\\":\\"BOT_573\\",\\"count\\":1,\\"premiumCount\\":0},\n            {\\"id\\":\\"CS2_024\\",\\"count\\":2,\\"premiumCount\\":0},\n            {\\"id\\":\\"CS2_033\\",\\"count\\":1,\\"premiumCount\\":0},\n            ...\n            {\\"id\\":\\"UNG_845\\",\\"count\\":1,\\"premiumCount\\":0},\n            {\\"id\\":\\"UNG_941\\",\\"count\\":1,\\"premiumCount\\":0}\n          ],\n        \\"deck_key\\":\\"adventure_deck\\"\n      }"\n    }\n  },\n  "feature":"decks"\n}\n\n')),(0,d.mdx)("b",null,"Arena Decks"),(0,d.mdx)("p",null,"Arena Decks, unlike standard decks, will be updated each time the local player chooses a card during the Arena Draft phase."),(0,d.mdx)("h4",{id:"selected_deck-note"},(0,d.mdx)("em",{parentName:"h4"},"selected_deck")," note"),(0,d.mdx)("p",null,"The following data is provided when the local player selects a deck:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"\u201cdeck_id\u201d"),(0,d.mdx)("li",{parentName:"ul"},"\u201cdeck_name\u201d"),(0,d.mdx)("li",{parentName:"ul"},"\u201cclass_skin\u201d \u2013 Deck image name")),(0,d.mdx)("p",null,"Example for a \u201cselected deck\u201d structure:"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},'{"feature":"decks","category":"selected_deck","key":"selected_deck","value":\n"{"deck_id":"706741699","deck_name":"Basic Shaman","class_skin":"Thrall" }')),(0,d.mdx)("h4",{id:"adventure-deck-note"},(0,d.mdx)("em",{parentName:"h4"},"adventure deck")," note"),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n   "info":{\n      "decks":{\n         "Adventure Deck":"{\n                            "deck_id":"Adventure Deck",\n                            "cards":[\n                                      {"id":"BOT_573","count":1,"premiumCount":0},\n                                      {"id":"CS2_024","count":2,"premiumCount":0},\n                                      {"id":"CS2_033","count":1,"premiumCount":0},\n                                      ...\n                                      {"id":"UNG_845","count":1,"premiumCount":0},\n                                      {"id":"UNG_941","count":1,"premiumCount":0}\n                                    ],\n                             "deck_key":"adventure_deck"\n                           }"\n           }\n   },\n   "feature":"decks"\n}\n')),(0,d.mdx)("h4",{id:"adventure_loot_options-note"},(0,d.mdx)("em",{parentName:"h4"},"adventure_loot_options")," note"),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n   "info":{\n      "decks":{\n               "adventure_loot_options":"[\n                                          {"deck_id":"option_a","cards":[\n                                                                         {"id":"EX1_279","count":1,"premiumCount":0},\n                                                                         {"id":"EX1_559","count":1,"premiumCount":0},\n                                                                         {"id":"GVG_001","count":1,"premiumCount":0}\n                                                                         ]\n                                           },\n                                          {"deck_id":"option_b","cards":[\n                                                                          {"id":"AT_090","count":1,"premiumCount":0},\n                                                                          {"id":"AT_099","count":1,"premiumCount":0},\n                                                                          {"id":"AT_119","count":1,"premiumCount":0}\n                                                                         ]\n                                           },\n                                          {"deck_id":"option_c","cards":[\n                                                                         {"id":"CS2_028","count":1,"premiumCount":0},\n                                                                         {"id":"EX1_295","count":1,"premiumCount":0},\n                                                                         {"id":"GIL_801","count":1,"premiumCount":0}\n                                                                         ]\n                                            }\n                                          ]"\n              }\n     },\n   "feature":"decks"\n}\n')),(0,d.mdx)("h2",{id:"match"},(0,d.mdx)("inlineCode",{parentName:"h2"},"match")),(0,d.mdx)("h3",{id:"info-updates-4"},"Info Updates"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"key"),(0,d.mdx)("th",{parentName:"tr",align:null},"Category"),(0,d.mdx)("th",{parentName:"tr",align:null},"Values"),(0,d.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,d.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"localPlayer"),(0,d.mdx)("td",{parentName:"tr",align:null},"playersInfo"),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#localPlayer-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null}),(0,d.mdx)("td",{parentName:"tr",align:null},"123.0")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"opponent"),(0,d.mdx)("td",{parentName:"tr",align:null},"playersInfo"),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#opponent-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null}),(0,d.mdx)("td",{parentName:"tr",align:null},"123.0")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"match_type"),(0,d.mdx)("td",{parentName:"tr",align:null},"match_info"),(0,d.mdx)("td",{parentName:"tr",align:null},"The type of the current match."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#match_type-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"134.0")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"battlegrounds_rating"),(0,d.mdx)("td",{parentName:"tr",align:null},"match_info"),(0,d.mdx)("td",{parentName:"tr",align:null},"The local player's BG rating."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#battlegrounds_rating-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"143.0")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"adventure_stats"),(0,d.mdx)("td",{parentName:"tr",align:null},"match_info"),(0,d.mdx)("td",{parentName:"tr",align:null},"The stats of the current adventure run."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#adventure_stats-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"143.0")))),(0,d.mdx)("h4",{id:"localplayer-note"},(0,d.mdx)("em",{parentName:"h4"},"localPlayer")," note"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"name"),'" \u2013 name of local player'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"standardRank"),'" \u2013 rank of the player in Constructed Standard mode (string)'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"standardLegendRank"),'" \u2013 rank of the player in Constructed Standard mode, once he reached Legend (int)'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"wildRank"),'" \u2013 rank of the player in Constructed Wild mode (int)'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"wildLegendRank"),'"\u2013 rank of the player in Constructed Wild mode, once he reached Legend (int)'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"cardBackId"),'" \u2013 ID of the card back used in the current game (int)'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"cardId"),'" \u2013 ID of the card representing the hero (string)')),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"playersInfo":{"localPlayer":"{"name":"Overwolf","standardRank":"Bronze 10","standardLegendRank":0,"wildRank":0,"wildLegendRank":0,"cardBackId":157,"cardId":"HERO_05"}"}`\n')),(0,d.mdx)("h4",{id:"opponent-note"},(0,d.mdx)("em",{parentName:"h4"},"opponent")," note"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"name"),'" \u2013 name of the opponent'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"standardRank"),'" \u2013 The rank of the player in Constructed, in Standard mode (string)'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"standardLegendRank"),'"\u2013 The rank of the player in Constructed, in Standard mode, once he reached Legend (int)'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"wildRank"),'" \u2013 The rank of the player in Constructed, in Wild mode (int)'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"wildLegendRank")," \u2013 The rank of the player in Constructed, in Wild mode, once he reached Legend (int)"),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"cardBackId"),'" \u2013 the ID of the card back used in the current game (int)'),(0,d.mdx)("li",{parentName:"ul"},'"',(0,d.mdx)("b",null,"cardId"),'" \u2013 the ID of the card representing the hero (string)')),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"playersInfo":{"opponent":"{"name":"furhyax","standardRank":"Bronze 10","standardLegendRank":0,"wildRank":0,"wildLegendRank":0,"cardBackId":172,"cardId":"HERO_09a"}"}`\n')),(0,d.mdx)("h4",{id:"match_type-note"},(0,d.mdx)("em",{parentName:"h4"},"match_type")," note"),(0,d.mdx)("b",null,"Important:"),' There\'s a new game mode called "Duels". We do NOT support this mode at this time. We will update accordingly in the near future.',(0,d.mdx)("div",{className:"admonition admonition-tip alert alert--success"},(0,d.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,d.mdx)("h5",{parentName:"div"},(0,d.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,d.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,d.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,d.mdx)("div",{parentName:"div",className:"admonition-content"},(0,d.mdx)("p",{parentName:"div"},"If you would like to know when the user is going to play the ",(0,d.mdx)("inlineCode",{parentName:"p"},"battlegrounds")," mode, you can listen to the match_type info update, and check If the value is ",(0,d.mdx)("inlineCode",{parentName:"p"},"GT_BATTLEGROUNDS"),"."))),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"match_type":"GT_CASUAL"}},"feature":"match"}\n\n{"info":{"match_info":{"match_type":"GT_BATTLEGROUNDS"}},"feature":"match"}\n')),(0,d.mdx)("h4",{id:"battlegrounds_rating-note"},(0,d.mdx)("em",{parentName:"h4"},"battlegrounds_rating")," note"),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"battlegrounds_rating":"2153"}},"feature":"match_info"}\n')),(0,d.mdx)("h4",{id:"adventure_stats-note"},(0,d.mdx)("em",{parentName:"h4"},"adventure_stats")," note"),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n   "info":{\n      "match_info":{\n         "adventure_stats":"{"adventure_trl":{\n         "dungeon_crawl_all_classes_total_boss_wins":29,\n         "dungeon_crawl_all_classes_total_run_wins":1,\n         "dungeon_crawl_hunter_boss_wins":1,\n         "dungeon_crawl_hunter_run_wins":0,\n         "dungeon_crawl_paladin_boss_wins":0,\n         "dungeon_crawl_paladin_run_wins":0,\n         "dungeon_crawl_mage_boss_wins":7,\n         "dungeon_crawl_mage_run_wins":0,\n         "dungeon_crawl_warlock_boss_wins":6,\n         "dungeon_crawl_warlock_run_wins":0,\n         "dungeon_crawl_warrior_boss_wins":8,\n         "dungeon_crawl_warrior_run_wins":1,\n         "dungeon_crawl_shaman_boss_wins":6,\n         "dungeon_crawl_shaman_run_wins":0,\n         "dungeon_crawl_priest_boss_wins":1,\n         "dungeon_crawl_priest_run_wins":0,\n         "dungeon_crawl_rogue_boss_wins":0,\n         "dungeon_crawl_rogue_run_wins":0,\n         "dungeon_crawl_druid_boss_wins":0}}"\n      }\n   },\n   "feature":"match_info"\n}\n')),(0,d.mdx)("h3",{id:"events"},"Events"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Event"),(0,d.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,d.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,d.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,d.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"match_start"),(0,d.mdx)("td",{parentName:"tr",align:null},"Wild / Standard"),(0,d.mdx)("td",{parentName:"tr",align:null},"match starts"),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#match_start-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"123.0")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"match_end"),(0,d.mdx)("td",{parentName:"tr",align:null},'"win"/"lose"/"tie"'),(0,d.mdx)("td",{parentName:"tr",align:null},"match ends"),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#match_end-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"123.0")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"match_outcome"),(0,d.mdx)("td",{parentName:"tr",align:null},'"WON" / "LOST"'),(0,d.mdx)("td",{parentName:"tr",align:null},"match concludes"),(0,d.mdx)("td",{parentName:"tr",align:null},"This event is not reliable on some rare scenarios, please use ",(0,d.mdx)("inlineCode",{parentName:"td"},'"match_end"')," event data instead"),(0,d.mdx)("td",{parentName:"tr",align:null},"134.0")))),(0,d.mdx)("h4",{id:"match_start-note"},(0,d.mdx)("em",{parentName:"h4"},"match_start")," note"),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"match_start","data":"wild"}]}\n{"events":[{"name":"match_start","data":"standard"}]}\n')),(0,d.mdx)("h4",{id:"match_end-note"},(0,d.mdx)("em",{parentName:"h4"},"match_end")," note"),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"match_end","data":"win"}]}\n{"events":[{"name":"match_end","data":"lose"}]}\n{"events":[{"name":"match_end","data":"tie"}]}\n')),(0,d.mdx)("h4",{id:"match_outcome-note"},(0,d.mdx)("em",{parentName:"h4"},"match_outcome")," note"),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"match_outcome","data":"WON"}]}\n{"events":[{"name":"match_outcome","data":"LOST"}]}\n')),(0,d.mdx)("h2",{id:"match_info"},(0,d.mdx)("inlineCode",{parentName:"h2"},"match_info")),(0,d.mdx)("h3",{id:"info-updates-5"},"Info Updates"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"key"),(0,d.mdx)("th",{parentName:"tr",align:null},"Category"),(0,d.mdx)("th",{parentName:"tr",align:null},"Values"),(0,d.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,d.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"pseudo_match_id"),(0,d.mdx)("td",{parentName:"tr",align:null},"match_info"),(0,d.mdx)("td",{parentName:"tr",align:null},"The ID of the current match."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#pseudo_match_id-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"134.0")))),(0,d.mdx)("h4",{id:"pseudo_match_id-note"},(0,d.mdx)("em",{parentName:"h4"},"pseudo_match_id")," note"),(0,d.mdx)("p",null,"This is an Overwolf generated code for internal use, not issued by the game or by Blizzard."),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"pseudo_match_id":"5a7e3729-993c-414d-8e3f-592faeef81e7"}},"feature":"match_info"}\n')),(0,d.mdx)("h2",{id:"arena"},(0,d.mdx)("inlineCode",{parentName:"h2"},"arena")),(0,d.mdx)("h3",{id:"info-updates-6"},"Info Updates"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"key"),(0,d.mdx)("th",{parentName:"tr",align:null},"Category"),(0,d.mdx)("th",{parentName:"tr",align:null},"Values"),(0,d.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,d.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"arena_draft"),(0,d.mdx)("td",{parentName:"tr",align:null},"arena"),(0,d.mdx)("td",{parentName:"tr",align:null},"Three offered cards during arena draft."),(0,d.mdx)("td",{parentName:"tr",align:null},"See ",(0,d.mdx)("a",{parentName:"td",href:"#arena_draft-note"},"notes")),(0,d.mdx)("td",{parentName:"tr",align:null},"184.0")))),(0,d.mdx)("h4",{id:"arena_draft-note"},(0,d.mdx)("em",{parentName:"h4"},"arena_draft")," note"),(0,d.mdx)("p",null,"Data Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{"info":{"arena":{"arena_draft":"{"cards":["TRL_509","SW_067","SW_319"]}"}},"feature":"arena"}\n')))}h.isMDXComponent=!0}}]);