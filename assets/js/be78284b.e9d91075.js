"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7364],{35318:(e,a,t)=>{t.r(a),t.d(a,{MDXContext:()=>o,MDXProvider:()=>u,mdx:()=>g,useMDXComponents:()=>h,withMDXComponents:()=>p});var n=t(27378);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function m(){return m=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},m.apply(this,arguments)}function d(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?d(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):d(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},m=Object.keys(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=n.createContext({}),p=function(e){return function(a){var t=h(a.components);return n.createElement(e,m({},a,{components:t}))}},h=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},u=function(e){var a=h(e.components);return n.createElement(o.Provider,{value:a},e.children)},x="mdxType",s={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},N=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,m=e.originalType,d=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=h(t),u=l,x=p["".concat(d,".").concat(u)]||p[u]||s[u]||m;return t?n.createElement(x,r(r({ref:a},o),{},{components:t})):n.createElement(x,r({ref:a},o))}));function g(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var m=t.length,d=new Array(m);d[0]=N;var r={};for(var i in a)hasOwnProperty.call(a,i)&&(r[i]=a[i]);r.originalType=e,r[x]="string"==typeof e?e:l,d[1]=r;for(var o=2;o<m;o++)d[o]=t[o];return n.createElement.apply(null,d)}return n.createElement.apply(null,t)}N.displayName="MDXCreateElement"},33467:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>d,default:()=>x,frontMatter:()=>m,metadata:()=>r,toc:()=>o});var n=t(25773),l=(t(27378),t(35318));const m={id:"dota-2",image:"/img/embed/games/dota-2.jpg",title:"Dota 2 Game events",hide_title:!0,sidebar_label:"Dota 2",sidebar_custom_props:{overwolf_platform:!0,electron_platform:!1}},d=void 0,r={unversionedId:"api/games/events/dota-2",id:"api/games/events/dota-2",title:"Dota 2 Game events",description:"Please read the overwolf.games.events documentation page to learn how to use Overwolf game events.",source:"@site/pages/docs/api/games/events/dota-2.mdx",sourceDirName:"api/games/events",slug:"/api/games/events/dota-2",permalink:"/api/games/events/dota-2",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/website/pages/docs/api/games/events/dota-2.mdx",tags:[],version:"current",lastUpdatedBy:"Oded Itkin",lastUpdatedAt:1667999405,formattedLastUpdatedAt:"Nov 9, 2022",frontMatter:{id:"dota-2",image:"/img/embed/games/dota-2.jpg",title:"Dota 2 Game events",hide_title:!0,sidebar_label:"Dota 2",sidebar_custom_props:{overwolf_platform:!0,electron_platform:!1}},sidebar:"api",previous:{title:"Diablo 2",permalink:"/api/games/events/diablo-2-resurrected"},next:{title:"Dota Underlords",permalink:"/api/games/events/dota-underlords"}},i={},o=[{value:"Sample Apps",id:"sample-apps",level:2},{value:"Available Features",id:"available-features",level:2},{value:"Game events status",id:"game-events-status",level:2},{value:"<code>gep_internal</code>",id:"gep_internal",level:2},{value:"Info Updates",id:"info-updates",level:3},{value:"<em>gep_internal</em> note",id:"gep_internal-note",level:4},{value:"<code>game_state</code>",id:"game_state",level:2},{value:"Events",id:"events",level:3},{value:"<em>new_game</em> note",id:"new_game-note",level:4},{value:"<em>game_over</em> note",id:"game_over-note",level:4},{value:"<code>game_state_changed</code>",id:"game_state_changed",level:2},{value:"Events",id:"events-1",level:3},{value:"<em>game_state_changed</em> note",id:"game_state_changed-note",level:4},{value:"<code>match_state_changed</code>",id:"match_state_changed",level:2},{value:"Events",id:"events-2",level:3},{value:"<em>match_state</em> note",id:"match_state-note",level:4},{value:"<code>match_detected</code>",id:"match_detected",level:2},{value:"Events",id:"events-3",level:3},{value:"<em>match_detected</em> note",id:"match_detected-note",level:4},{value:"<code>daytime_changed </code>",id:"daytime_changed-",level:2},{value:"Events",id:"events-4",level:3},{value:"<em>daytime_changed</em> note",id:"daytime_changed-note",level:4},{value:"<code>clock_time_changed </code>",id:"clock_time_changed-",level:2},{value:"Events",id:"events-5",level:3},{value:"<em>clock_time_changed</em> note",id:"clock_time_changed-note",level:4},{value:"<code>ward_purchase_cooldown_changed </code>",id:"ward_purchase_cooldown_changed-",level:2},{value:"Events",id:"events-6",level:3},{value:"<em>ward_purchase_cooldown_changed</em> note",id:"ward_purchase_cooldown_changed-note",level:4},{value:"<code>match_ended</code>",id:"match_ended",level:2},{value:"Events",id:"events-7",level:3},{value:"<em>match_ended</em> note",id:"match_ended-note",level:4},{value:"<code>kill</code>",id:"kill",level:2},{value:"Events",id:"events-8",level:3},{value:"<em>kill</em> note",id:"kill-note",level:4},{value:"<code>assist</code>",id:"assist",level:2},{value:"Events",id:"events-9",level:3},{value:"<em>assist</em> note",id:"assist-note",level:4},{value:"<code>death</code>",id:"death",level:2},{value:"Events",id:"events-10",level:3},{value:"<em>death</em> note",id:"death-note",level:4},{value:"<code>cs</code>",id:"cs",level:2},{value:"Events",id:"events-11",level:3},{value:"<em>cs</em> note",id:"cs-note",level:4},{value:"<code>xpm</code>",id:"xpm",level:2},{value:"Events",id:"events-12",level:3},{value:"<em>xpm</em> note",id:"xpm-note",level:4},{value:"<code>gpm</code>",id:"gpm",level:2},{value:"Events",id:"events-13",level:3},{value:"<em>gpm</em> note",id:"gpm-note",level:4},{value:"<code>gold</code>",id:"gold",level:2},{value:"Events",id:"events-14",level:3},{value:"<em>gold</em> note",id:"gold-note",level:4},{value:"<code>hero_leveled_up </code>",id:"hero_leveled_up-",level:2},{value:"Events",id:"events-15",level:3},{value:"<em>hero_leveled_up</em> note",id:"hero_leveled_up-note",level:4},{value:"<code>hero_respawned</code>",id:"hero_respawned",level:2},{value:"Events",id:"events-16",level:3},{value:"<em>hero_respawned</em> note",id:"hero_respawned-note",level:4},{value:"<code>hero_buyback_info_changed</code>",id:"hero_buyback_info_changed",level:2},{value:"Events",id:"events-17",level:3},{value:"<em>hero_buyback_info_changed</em> note",id:"hero_buyback_info_changed-note",level:4},{value:"<code>hero_boughtback</code>",id:"hero_boughtback",level:2},{value:"Events",id:"events-18",level:3},{value:"<em>hero_boughtback</em> note",id:"hero_boughtback-note",level:4},{value:"<code>hero_health_mana_info</code>",id:"hero_health_mana_info",level:2},{value:"Events",id:"events-19",level:3},{value:"<em>hero_health_mana_info</em> note",id:"hero_health_mana_info-note",level:4},{value:"<code>hero_status_effect_changed</code>",id:"hero_status_effect_changed",level:2},{value:"Events",id:"events-20",level:3},{value:"<em>hero_status_effect_changed</em> note",id:"hero_status_effect_changed-note",level:4},{value:"<code>hero_attributes_skilled</code>",id:"hero_attributes_skilled",level:2},{value:"Events",id:"events-21",level:3},{value:"<em>hero_attributes_skilled</em> note",id:"hero_attributes_skilled-note",level:4},{value:"<code>hero_ability_skilled</code>",id:"hero_ability_skilled",level:2},{value:"Events",id:"events-22",level:3},{value:"<em>hero_ability_skilled</em> note",id:"hero_ability_skilled-note",level:4},{value:"<code>hero_ability_used</code>",id:"hero_ability_used",level:2},{value:"Events",id:"events-23",level:3},{value:"<em>hero_ability_used</em> note",id:"hero_ability_used-note",level:4},{value:"<code>hero_ability_cooldown_changed</code>",id:"hero_ability_cooldown_changed",level:2},{value:"Events",id:"events-24",level:3},{value:"<em>hero_ability_cooldown_changed</em> note",id:"hero_ability_cooldown_changed-note",level:4},{value:"<code>hero_ability_changed</code>",id:"hero_ability_changed",level:2},{value:"Events",id:"events-25",level:3},{value:"<em>hero_ability_changed</em> note",id:"hero_ability_changed-note",level:4},{value:"<code>hero_item_cooldown_changed</code>",id:"hero_item_cooldown_changed",level:2},{value:"Events",id:"events-26",level:3},{value:"<em>hero_item_cooldown_changed</em> note",id:"hero_item_cooldown_changed-note",level:4},{value:"<code>hero_item_changed</code>",id:"hero_item_changed",level:2},{value:"Events",id:"events-27",level:3},{value:"<em>hero_item_changed</em> note",id:"hero_item_changed-note",level:4},{value:"<code>hero_item_used</code>",id:"hero_item_used",level:2},{value:"Events",id:"events-28",level:3},{value:"<em>hero_item_used</em> note",id:"hero_item_used-note",level:4},{value:"<code>hero_item_consumed</code>",id:"hero_item_consumed",level:2},{value:"Events",id:"events-29",level:3},{value:"<em>hero_item_consumed</em> note",id:"hero_item_consumed-note",level:4},{value:"<code>hero_item_charged</code>",id:"hero_item_charged",level:2},{value:"Events",id:"events-30",level:3},{value:"<em>hero_item_charged</em> note",id:"hero_item_charged-note",level:4},{value:"<code>match_info</code>",id:"match_info",level:2},{value:"Info Updates",id:"info-updates-1",level:3},{value:"<em>pseudo_match_id</em> note",id:"pseudo_match_id-note",level:4},{value:"<em>game_mode</em> note",id:"game_mode-note",level:4},{value:"<em>team_score</em> note",id:"team_score-note",level:4},{value:"<code>roster</code>",id:"roster",level:2},{value:"Info Updates",id:"info-updates-2",level:3},{value:"<em>players</em> note",id:"players-note",level:4},{value:"<em>bans</em> note",id:"bans-note",level:4},{value:"<em>draft</em> note",id:"draft-note",level:4},{value:"<code>party</code>",id:"party",level:2},{value:"Info Updates",id:"info-updates-3",level:3},{value:"<em>party</em> note",id:"party-note",level:4},{value:"<code>error</code>",id:"error",level:2},{value:"Info Updates",id:"info-updates-4",level:3},{value:"<em>plugin_error</em> note",id:"plugin_error-note",level:4},{value:"<code>hero_pool</code>",id:"hero_pool",level:2},{value:"Info Updates",id:"info-updates-5",level:3},{value:"<em>hero_pool</em> note",id:"hero_pool-note",level:4},{value:"<code>me</code>",id:"me",level:2},{value:"Info Updates",id:"info-updates-6",level:3},{value:"<em>me</em> note",id:"me-note",level:4},{value:"<code>game</code>",id:"game",level:2},{value:"Info Updates",id:"info-updates-7",level:3}],p=(h="GameInfo",function(e){return console.warn("Component "+h+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",e)});var h;const u={toc:o};function x(e){let{components:a,...t}=e;return(0,l.mdx)("wrapper",(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,l.mdx)("head",null,(0,l.mdx)("meta",{name:"keywords",content:"API for Dota 2, Dota 2 API, SDK for Dota 2, Dota 2 SDK"})),(0,l.mdx)(p,{gameID:7314,showCompliance:!0,showDocs:!1,mdxType:"GameInfo"}),(0,l.mdx)("p",null,"Please read the ",(0,l.mdx)("a",{parentName:"p",href:"../events"},"overwolf.games.events")," documentation page to learn how to use Overwolf game events."),(0,l.mdx)("admonition",{title:"Game State Integration",type:"warning"},(0,l.mdx)("p",{parentName:"admonition"},"Due to a recent update in Dota 2 in order for Overwolf apps to work correctly you will need to inform your users to add under Launch Options the following command line: "),(0,l.mdx)("br",null),"-gamestateintegration - [More details here](https://support.overwolf.com/en/support/solutions/articles/9000212745-how-to-enable-game-state-integration-for-dota-2) In order to know which user is already using this command line parameter, you should use getGameInfo API, there you will get this parameter in the response under gameInfo --\x3e GameInfo --\x3e ProcessCommandLine - [More details here](.games)"),(0,l.mdx)("h2",{id:"sample-apps"},"Sample Apps"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"https://github.com/overwolf/events-sample-apps/tree/master/dota-events-sample-app-master"},"Dota2 game events sample app"))),(0,l.mdx)("h2",{id:"available-features"},"Available Features"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#gep_internal"},"gep_internal")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#game_state"},"game_state")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#game_state_changed"},"game_state_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#match_state_changed"},"match_state_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#match_detected"},"match_detected")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#daytime_changed"},"daytime_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#clock_time_changed"},"clock_time_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#ward_purchase_cooldown_changed"},"ward_purchase_cooldown_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#match_ended"},"match_ended")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#kill"},"kill")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#assist"},"assist")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#death"},"death")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#cs"},"cs")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#xpm"},"xpm")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#gpm"},"gpm")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#gold"},"gold")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_leveled_up"},"hero_leveled_up")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_respawned"},"hero_respawned")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_buyback_info_changed"},"hero_buyback_info_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_boughtback"},"hero_boughtback")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_health_mana_info"},"hero_health_mana_info")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_status_effect_changed"},"hero_status_effect_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_attributes_skilled"},"hero_attributes_skilled")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_ability_skilled"},"hero_ability_skilled")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_ability_used"},"hero_ability_used")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_ability_cooldown_changed"},"hero_ability_cooldown_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_ability_changed"},"hero_ability_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_item_cooldown_changed"},"hero_item_cooldown_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_item_changed"},"hero_item_changed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_item_used"},"hero_item_used")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_item_consumed"},"hero_item_consumed")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_item_charged"},"hero_item_charged")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#match_info"},"match_info")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#roster"},"roster")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#party"},"party")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#error"},"error")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#hero_pool"},"hero_pool")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#me"},"me")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"#game"},"game"))),(0,l.mdx)("h2",{id:"game-events-status"},"Game events status"),(0,l.mdx)("p",null,"It is highly recommended to communicate errors and warnings to your app users. "),(0,l.mdx)("p",null,"Check ",(0,l.mdx)("a",{parentName:"p",href:"/status/"},"here")," the game events status. OR -  easily check the game events status from your app, ",(0,l.mdx)("a",{parentName:"p",href:"/topics/using-events/how-to-check-events-status-from-app"},"using our API"),"."),(0,l.mdx)("h2",{id:"gep_internal"},(0,l.mdx)("inlineCode",{parentName:"h2"},"gep_internal")),(0,l.mdx)("h3",{id:"info-updates"},"Info Updates"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"key"),(0,l.mdx)("th",{parentName:"tr",align:null},"Category"),(0,l.mdx)("th",{parentName:"tr",align:null},"Values"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"gep_internal"),(0,l.mdx)("td",{parentName:"tr",align:null},"gep_internal"),(0,l.mdx)("td",{parentName:"tr",align:null},"Local + Public version number"),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#gep_internal-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"143.0")))),(0,l.mdx)("h4",{id:"gep_internal-note"},(0,l.mdx)("em",{parentName:"h4"},"gep_internal")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"info":{"gep_internal":{"version_info":"{"local_version":"157.0.1","public_version":"157.0.1","is_updated":true}"}},"feature":"gep_internal"}\n')),(0,l.mdx)("h2",{id:"game_state"},(0,l.mdx)("inlineCode",{parentName:"h2"},"game_state")),(0,l.mdx)("h3",{id:"events"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"new_game"),(0,l.mdx)("td",{parentName:"tr",align:null},"null"),(0,l.mdx)("td",{parentName:"tr",align:null},"Match started"),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#new_game-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"game_over"),(0,l.mdx)("td",{parentName:"tr",align:null},"null"),(0,l.mdx)("td",{parentName:"tr",align:null},"Match ended"),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#game_over-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"new_game-note"},(0,l.mdx)("em",{parentName:"h4"},"new_game")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"new_game","data":""}]}\n')),(0,l.mdx)("h4",{id:"game_over-note"},(0,l.mdx)("em",{parentName:"h4"},"game_over")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"game_over","data":""}]}\n')),(0,l.mdx)("h2",{id:"game_state_changed"},(0,l.mdx)("inlineCode",{parentName:"h2"},"game_state_changed")),(0,l.mdx)("h3",{id:"events-1"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"game_state_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("ul",null,(0,l.mdx)("li",null,"game_state"),(0,l.mdx)("li",null,"match_state"),(0,l.mdx)("li",null,"match_id"),(0,l.mdx)("li",null,"player_steam_id"))),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#game_state_changed-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"game_state_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"game_state_changed")," note"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"game_state")," \u2013 Can be \u2018playing\u2019, \u2018idle\u2019 or \u2018spectating\u2019. Idle is when there isn\u2019t a game being played or spectated."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"match_state")," \u2013 The internal match state. See \u2018match_state_changed\u2019 event for more info."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"match_id")," (not available for \u2018idle\u2019): The id of the match."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"player_steam_id")," (not available for \u2018idle\u2019): Steam id of the local player.")),(0,l.mdx)("p",null,"Fired when:"),(0,l.mdx)("p",null,"The user starts playing, begins spectating or stops playing. Note that simply bringing up the menu is not enough to trigger the \u2018idle\u2019 event \u2013 an active game (played or spectated) must be closed."),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"game_state_changed","data":"{"game_state": "playing",  "match_state": "DOTA_GAMERULES_STATE_INIT",  "match_id": "0",  "player_steam_id": "76561197971316549",  "player_team": "radiant"}"}]}\n')),(0,l.mdx)("h2",{id:"match_state_changed"},(0,l.mdx)("inlineCode",{parentName:"h2"},"match_state_changed")),(0,l.mdx)("h3",{id:"events-2"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"match_state_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#match_state-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"match_state-note"},(0,l.mdx)("em",{parentName:"h4"},"match_state")," note"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("p",null,"match_state \u2013 One of the following:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD"),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_HERO_SELECTION"),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_PRE_GAME"),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_GAME_IN_PROGRESS"),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_POST_GAME"),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_TEAM_SHOWCASE")),(0,l.mdx)("p",null,"Event data example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"match_state_changed","data":"{  "match_state": "DOTA_GAMERULES_STATE_HERO_SELECTION"}"}]}\n')),(0,l.mdx)("p",null,"Fired when:"),(0,l.mdx)("p",null,"The internal game match state has changed."),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD \u2013 Shown during the pre-game \u201cWaiting for loaders\u201d screen."),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_HERO_SELECTION \u2013 Shown during the hero selection screen."),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_PRE_GAME \u2013 Shown when the game begins, before the battle horn is heard."),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_GAME_IN_PROGRESS \u2013 Shown when the horn sounds to open the match."),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_POST_GAME \u2013 Shown during the post-game screen."),(0,l.mdx)("li",{parentName:"ul"},"DOTA_GAMERULES_STATE_TEAM_SHOWCASE ")),(0,l.mdx)("h2",{id:"match_detected"},(0,l.mdx)("inlineCode",{parentName:"h2"},"match_detected")),(0,l.mdx)("h3",{id:"events-3"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"match_detected"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#match_detected-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"match_detected-note"},(0,l.mdx)("em",{parentName:"h4"},"match_detected")," note"),(0,l.mdx)("b",null,"This feature is not available at the moment"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"gameMode")," \u2013 One of the supported game modes."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"playersInfo")," \u2013 An array of 10 players' information with the following fields: * ",(0,l.mdx)("b",null,"faction")," \u2013 Radiant/Dire * ",(0,l.mdx)("b",null,"isLocalPlayer")," \u2013 True if this is the local player's information, false otherwise. * ",(0,l.mdx)("b",null,"playerIndex")," \u2013 The index of this player (0 \u2013 9, left to right). * ",(0,l.mdx)("b",null,"steamId")," \u2013 Steam Id of the player.")),(0,l.mdx)("p",null,"Fired when:"),(0,l.mdx)("p",null,"As soon as 10 players have accepted a match, right after the 'accept' button is clicked by all.\nSupported game modes:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"AllPick"),(0,l.mdx)("li",{parentName:"ul"},"AllPickRanked"),(0,l.mdx)("li",{parentName:"ul"},"SingleDraft"),(0,l.mdx)("li",{parentName:"ul"},"RandomDraft"),(0,l.mdx)("li",{parentName:"ul"},"AllRandom"),(0,l.mdx)("li",{parentName:"ul"},"LeastPlayed"),(0,l.mdx)("li",{parentName:"ul"},"LimitedHeroes"),(0,l.mdx)("li",{parentName:"ul"},"CaptainsMode"),(0,l.mdx)("li",{parentName:"ul"},"CaptainsDraft")),(0,l.mdx)("h2",{id:"daytime_changed-"},(0,l.mdx)("inlineCode",{parentName:"h2"},"daytime_changed ")),(0,l.mdx)("h3",{id:"events-4"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"daytime_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#daytime_changed-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"daytime_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"daytime_changed")," note"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"daytime")," \u2013 True if it is current day time, false otherwise."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"clock_time")," \u2013 The amount of seconds from when the game clocked shows (0:00). It can be negative during the Pre-Game phase."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"nightstalker_night")," \u2013 True if it is currently a Night Stalker ultimate night.")),(0,l.mdx)("p",null,"Fired when:"),(0,l.mdx)("p",null,"The game transitions between day time and night time. "),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"daytime_changed","data":"{  "daytime": true,  "clock_time": -89,  "nightstalker_night": false}"}]}\n')),(0,l.mdx)("h2",{id:"clock_time_changed-"},(0,l.mdx)("inlineCode",{parentName:"h2"},"clock_time_changed ")),(0,l.mdx)("h3",{id:"events-5"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"clock_time_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Same as \u2018map_daytime_changed\u2019."),(0,l.mdx)("td",{parentName:"tr",align:null},"Fired every second"),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"clock_time_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"clock_time_changed")," note"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"clock_time_changed","data":"{  "daytime": true,  "clock_time": -89,  "nightstalker_night": false}"}]}\n')),(0,l.mdx)("h2",{id:"ward_purchase_cooldown_changed-"},(0,l.mdx)("inlineCode",{parentName:"h2"},"ward_purchase_cooldown_changed ")),(0,l.mdx)("h3",{id:"events-6"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"ward_purchase_cooldown_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null},"Fired every second where wards are on cooldown."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#ward_purchase_cooldown_changed-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"ward_purchase_cooldown_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"ward_purchase_cooldown_changed")," note"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"ward_purchase_cooldown")," \u2013 The remaining store cooldown in seconds before a ward is available for purchase again.")),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"ward_purchase_cooldown_changed","data":"{"ward_purchase_cooldown":128}"}]}\n')),(0,l.mdx)("h2",{id:"match_ended"},(0,l.mdx)("inlineCode",{parentName:"h2"},"match_ended")),(0,l.mdx)("h3",{id:"events-7"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"match_ended"),(0,l.mdx)("td",{parentName:"tr",align:null},"radiant/dire"),(0,l.mdx)("td",{parentName:"tr",align:null},"When an ancient is destroyed and the game ends."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#match_ended-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"match_ended-note"},(0,l.mdx)("em",{parentName:"h4"},"match_ended")," note"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"match_ended","data":"{  "winner": "radiant"}"}]}\n')),(0,l.mdx)("h2",{id:"kill"},(0,l.mdx)("inlineCode",{parentName:"h2"},"kill")),(0,l.mdx)("h3",{id:"events-8"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"kill"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player kills an enemy hero."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#kill-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"kill-note"},(0,l.mdx)("em",{parentName:"h4"},"kill")," note"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"kill","data":"{  "kills": 10,  "kill_streak": 7,  "label": "kill"}"}]}\n')),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"kills")," \u2013 The total number of kills the player has."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"kill_streak")," \u2013 The current number of hero kills without dying, denying oneself to neutral creeps does not reset this counter."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"label")," \u2013 the type of kill (kill/double_kill/triple_kill/ultra_kill/rampage)")),(0,l.mdx)("h2",{id:"assist"},(0,l.mdx)("inlineCode",{parentName:"h2"},"assist")),(0,l.mdx)("h3",{id:"events-9"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"assist"),(0,l.mdx)("td",{parentName:"tr",align:null},"assists \u2013 The total number of assists the player has."),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player assists in a kill of an enemy champion."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#assist-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"assist-note"},(0,l.mdx)("em",{parentName:"h4"},"assist")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"assist","data":"{"assists": 1}"}]}\n')),(0,l.mdx)("h2",{id:"death"},(0,l.mdx)("inlineCode",{parentName:"h2"},"death")),(0,l.mdx)("h3",{id:"events-10"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"death"),(0,l.mdx)("td",{parentName:"tr",align:null},"deaths \u2013 The total number of deaths the player has."),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player dies."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#death-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"death-note"},(0,l.mdx)("em",{parentName:"h4"},"death")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"death","data":"{"deaths":1}"}]}\n')),(0,l.mdx)("h2",{id:"cs"},(0,l.mdx)("inlineCode",{parentName:"h2"},"cs")),(0,l.mdx)("h3",{id:"events-11"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"cs"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player last hits/denies non-champion units that grant creep score."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#cs-notes"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"cs-note"},(0,l.mdx)("em",{parentName:"h4"},"cs")," note"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"last_hits")," \u2013 The total amount of last hits (not denies) the player has."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"denies")," \u2013 The total amount of denies the player has."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"type")," \u2013 last_hits/deny.")),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"cs","data":"{"last_hits": 1,"denies":0,"type":"last_hit"}"}]}\n')),(0,l.mdx)("h2",{id:"xpm"},(0,l.mdx)("inlineCode",{parentName:"h2"},"xpm")),(0,l.mdx)("h3",{id:"events-12"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"xpm"),(0,l.mdx)("td",{parentName:"tr",align:null},"xpm \u2013 The current Experience Per Minute value."),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the XPM changes."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#xpm-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"xpm-note"},(0,l.mdx)("em",{parentName:"h4"},"xpm")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"xpm","data":"{  "xpm": 250}"}]}\n')),(0,l.mdx)("h2",{id:"gpm"},(0,l.mdx)("inlineCode",{parentName:"h2"},"gpm")),(0,l.mdx)("h3",{id:"events-13"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"gpm"),(0,l.mdx)("td",{parentName:"tr",align:null},"gpm \u2013 The current Gold Per Minute value."),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the GPM changes."),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"gpm-note"},(0,l.mdx)("em",{parentName:"h4"},"gpm")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"gpm","data":"{  "gpm": 363605184}"}]}\n')),(0,l.mdx)("h2",{id:"gold"},(0,l.mdx)("inlineCode",{parentName:"h2"},"gold")),(0,l.mdx)("h3",{id:"events-14"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"gold"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever gold changes."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#gold-notes"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"gold-note"},(0,l.mdx)("em",{parentName:"h4"},"gold")," note"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"gold")," \u2013 Total current gold."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"gold_reliable")," \u2013 Reliable gold part."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"gold_unreliable")," \u2013 Unreliable gold part.")),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"gold","data":"{  "gold": 10599,  "gold_reliable": 0,  "gold_unreliable": 10599}"}]}\n')),(0,l.mdx)("h2",{id:"hero_leveled_up-"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_leveled_up ")),(0,l.mdx)("h3",{id:"events-15"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_leveled_up"),(0,l.mdx)("td",{parentName:"tr",align:null},"hero_level \u2013 The current hero level."),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player levels up."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_leveled_up-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_leveled_up-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_leveled_up")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_leveled_up","data":"{  "hero_level": 30}"}]}\n')),(0,l.mdx)("h2",{id:"hero_respawned"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_respawned")),(0,l.mdx)("h3",{id:"events-16"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_respawned"),(0,l.mdx)("td",{parentName:"tr",align:null},"N/A"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player respawns. This is also true when buying back."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_respawned-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_respawned-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_respawned")," note"),(0,l.mdx)("b",null,"Currently this event is NOT supported."),(0,l.mdx)("h2",{id:"hero_buyback_info_changed"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_buyback_info_changed")),(0,l.mdx)("h3",{id:"events-17"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_buyback_info_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_buyback_info_changed-notes"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_buyback_info_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_buyback_info_changed")," note"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"buyback_cost")," \u2013 Gold cost to buyback"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"buyback_cooldown")," \u2013 Cooldown remaining for buyback to become available")),(0,l.mdx)("p",null,"Fired when:"),(0,l.mdx)("p",null,"Every 4 seconds and every level-up, since buyback cost is affected by game time and player level. It will also be called every second when buyback is on cooldown."),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_buyback_info_changed","data":"{  "buyback_cost": 8541,  "buyback_cooldown": 0}"}]}\n')),(0,l.mdx)("h2",{id:"hero_boughtback"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_boughtback")),(0,l.mdx)("h3",{id:"events-18"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_boughtback"),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("b",null,"buyback_cooldown")," \u2013 The cooldown remaining for buyback to become available."),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player buys back."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_boughtback-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_boughtback-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_boughtback")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_boughtback","data":"{}"}]}\n')),(0,l.mdx)("h2",{id:"hero_health_mana_info"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_health_mana_info")),(0,l.mdx)("h3",{id:"events-19"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_health_mana_info"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever either of the players mana, health, max mana or max health changes."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_health_mana_info-notes"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_health_mana_info-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_health_mana_info")," note"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"health")," \u2013 Current health."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"max_health")," \u2013 Current maximum health."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"mana")," \u2013 Current mana."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"max_mana")," \u2013 Current maximum mana.")),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_health_mana_info","data":"{  "health": 2620,  "max_health": 2620,  "mana": 711,  "max_mana": 711}"}]}\n')),(0,l.mdx)("h2",{id:"hero_status_effect_changed"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_status_effect_changed")),(0,l.mdx)("h3",{id:"events-20"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_status_effect_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever any of these effects changes."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_status_effect_changed-notes"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_status_effect_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_status_effect_changed")," note"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"silenced")," \u2013 True if the player is silenced, false otherwise."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"stunned")," \u2013 True if the player is stunned, false otherwise."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"disarmed")," \u2013 True if the player is disarmed, false otherwise."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"magicimmune")," \u2013 True if the player is magic immune, false otherwise."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"hexed")," \u2013 True if the player is hexed, false otherwise."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"muted")," \u2013 True if the player is muted, false otherwise."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"break")," \u2013 True if the player is broken, false otherwise."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"has_debuff")," \u2013 True if the player is affected by any debuff, false otherwise.")),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_status_effect_changed","data":"{  "silenced": true,  "stunned": false,  "disarmed": false,  "magicimmune": false,  "hexed": false,  "muted": false,  "break": false,  "has_debuff": false}"}]}\n')),(0,l.mdx)("h2",{id:"hero_attributes_skilled"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_attributes_skilled")),(0,l.mdx)("h3",{id:"events-21"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_attributes_skilled"),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("b",null,"attributes_level")," \u2013 The current level of the player\u2019s attributes."),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player skills up his attributes."),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_attributes_skilled-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_attributes_skilled")," note"),(0,l.mdx)("h2",{id:"hero_ability_skilled"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_ability_skilled")),(0,l.mdx)("h3",{id:"events-22"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_ability_skilled"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player skills up an ability."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_ability_skilled-notes"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_ability_skilled-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_ability_skilled")," note"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"slot \u2013 The index of the ability slot (0 \u2013 5, left to right)"),(0,l.mdx)("li",{parentName:"ul"},"name \u2013 The name of the ability."),(0,l.mdx)("li",{parentName:"ul"},"level \u2013 The current level of the ability."),(0,l.mdx)("li",{parentName:"ul"},"can_cast \u2013 True unless  the ability is not skilled, there\u2019s not enough mana to cast it, the player is silenced, or is on cooldown."),(0,l.mdx)("li",{parentName:"ul"},"passive \u2013 True if the ability is passive."),(0,l.mdx)("li",{parentName:"ul"},"ability_active \u2013 Unknown, TBD."),(0,l.mdx)("li",{parentName:"ul"},"cooldown \u2013 Remaining cooldown until the ability is ready to cast."),(0,l.mdx)("li",{parentName:"ul"},"ultimate \u2013 True if the ability is an ultimate ability.")),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_ability_skilled","data":"{  "slot": 1,  "name": "sven_great_cleave",  "level": 1,  "can_cast": false,  "passive": true,  "ability_active": true,  "cooldown": 0,  "ultimate": false}"}]}\n')),(0,l.mdx)("h2",{id:"hero_ability_used"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_ability_used")),(0,l.mdx)("h3",{id:"events-23"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_ability_used"),(0,l.mdx)("td",{parentName:"tr",align:null},"Same as \u2018hero_ability_skilled\u2019"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever the player uses an ability."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_ability_used-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_ability_used-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_ability_used")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_ability_used","data":"{"slot":0,"name":"sven_storm_bolt","level":4,  "can_cast":false,"passive":false,"ability_active":true,"cooldown":7,"ultimate":false}"}]}\n')),(0,l.mdx)("h2",{id:"hero_ability_cooldown_changed"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_ability_cooldown_changed")),(0,l.mdx)("h3",{id:"events-24"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_ability_cooldown_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Same as \u2018hero_ability_skilled\u2019"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever an ability\u2019s remaining cooldown is changed."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_ability_cooldown_changed-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_ability_cooldown_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_ability_cooldown_changed")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_ability_cooldown_changed","data":"{  "slot": 3,  "name": "sven_gods_strength",  "level": 3,  "can_cast": false,  "passive": false,  "ability_active": true,  "cooldown": 59,  "ultimate": true}"}]}\n')),(0,l.mdx)("h2",{id:"hero_ability_changed"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_ability_changed")),(0,l.mdx)("h3",{id:"events-25"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_ability_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Same as \u2018hero_ability_skilled\u2019"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever an ability\u2019s name changes."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_ability_changed-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_ability_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_ability_changed")," note"),(0,l.mdx)("b",null,"Currently this event is NOT supported."),(0,l.mdx)("h2",{id:"hero_item_cooldown_changed"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_item_cooldown_changed")),(0,l.mdx)("h3",{id:"events-26"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_item_cooldown_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever an item\u2019s remaining cooldown is changed."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_item_cooldown_changed-notes"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_item_cooldown_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_item_cooldown_changed")," note"),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"slot")," \u2013 The index of the item slot (0 \u2013 5, top row from the left to bottom row from the right)"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"location")," \u2013 hero/stash"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"name")," \u2013 The name of the item"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"passive")," \u2013 True if the item is passive"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"can_cast")," \u2013 True unless there\u2019s not enough mana to use the item, the player is muted, or when the item is on cooldown. (only when passive = false)"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"cooldown")," \u2013 The remaining cooldown until the item is ready to be used. (only when passive = false)"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"charges")," \u2013 The remaining charges of the item (only when passive = false and where item can be charged)")),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_item_cooldown_changed","data":"{  "slot": 3,  "location": "hero",  "name": "item_mask_of_madness",  "can_cast": false,  "passive": false,  "cooldown": 16,  "charges": null}"}]}\n')),(0,l.mdx)("h2",{id:"hero_item_changed"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_item_changed")),(0,l.mdx)("h3",{id:"events-27"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_item_changed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Check notes"),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_item_changed-notes"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_item_changed-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_item_changed")," note"),(0,l.mdx)("b",null,"Currently this event is NOT supported."),(0,l.mdx)("p",null,"Event Data:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"slot")," \u2013 The index of the item slot (0 \u2013 5, top row from the left to bottom row from the right)"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"location")," \u2013 hero/stash"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"name")," \u2013 The name of the item."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"passive")," \u2013 True if the item is passive."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"can_cast")," \u2013 True unless there\u2019s not enough mana to use the item, the player is muted, or when the item is on cooldown. (only when passive = false)"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"cooldown")," \u2013 Remaining cooldown until the item is ready to be used again (only when passive = false)"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("b",null,"charges")," \u2013 Remaining charges of the item (only when passive = false and where item can be charged)")),(0,l.mdx)("p",null,"Fired when:"),(0,l.mdx)("p",null,"Whenever the item name in some hero/stash slot changes. This would mean that swapping items will trigger 2 events, one for each item.\t"),(0,l.mdx)("h2",{id:"hero_item_used"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_item_used")),(0,l.mdx)("h3",{id:"events-28"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_item_used"),(0,l.mdx)("td",{parentName:"tr",align:null},"Same as \u2018hero_item_changed\u2019"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever an item is used \u2013 Essentially this is when the item goes on cooldown."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_item_used-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_item_used-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_item_used")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_item_used","data":"{  "slot": 0,  "location": "hero",  "name": "item_blink",  "can_cast": false,  "passive": false,  "cooldown": 15,  "charges": null}"}]}\n')),(0,l.mdx)("h2",{id:"hero_item_consumed"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_item_consumed")),(0,l.mdx)("h3",{id:"events-29"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_item_consumed"),(0,l.mdx)("td",{parentName:"tr",align:null},"Same as \u2018hero_item_changed\u2019"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever an item\u2019s charges decreases."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_item_consumed-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_item_consumed-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_item_consumed")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_item_consumed","data":"{  "slot": 1,  "location": "hero",  "name": "item_tango",  "can_cast": true,  "passive": false,  "cooldown": 0,  "charges": 4}"}]}\n')),(0,l.mdx)("h2",{id:"hero_item_charged"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_item_charged")),(0,l.mdx)("h3",{id:"events-30"},"Events"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Event"),(0,l.mdx)("th",{parentName:"tr",align:null},"Event Data"),(0,l.mdx)("th",{parentName:"tr",align:null},"Fired When"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_item_charged"),(0,l.mdx)("td",{parentName:"tr",align:null},"Same as \u2018hero_item_changed\u2019"),(0,l.mdx)("td",{parentName:"tr",align:null},"Whenever an item\u2019s charges increases."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_item_charged-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"77.3")))),(0,l.mdx)("h4",{id:"hero_item_charged-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_item_charged")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"hero_item_charged","data":"{  "slot": 0,  "location": "hero",  "name": "item_ward_observer",  "can_cast": true,  "passive": false,  "cooldown": 0,  "charges": 2}"}]}\n')),(0,l.mdx)("h2",{id:"match_info"},(0,l.mdx)("inlineCode",{parentName:"h2"},"match_info")),(0,l.mdx)("h3",{id:"info-updates-1"},"Info Updates"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"key"),(0,l.mdx)("th",{parentName:"tr",align:null},"Category"),(0,l.mdx)("th",{parentName:"tr",align:null},"Values"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"pseudo_match_id"),(0,l.mdx)("td",{parentName:"tr",align:null},"match_info"),(0,l.mdx)("td",{parentName:"tr",align:null},"The current match\u2019s ID code."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#pseudo_match_id-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"130.0")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"game_mode"),(0,l.mdx)("td",{parentName:"tr",align:null},"match_info"),(0,l.mdx)("td",{parentName:"tr",align:null},"Type of mode that is currently played"),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#game_mode-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"171.1")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"team_score"),(0,l.mdx)("td",{parentName:"tr",align:null},"team_score"),(0,l.mdx)("td",{parentName:"tr",align:null},"Score of each team during the game"),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#team_score-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"198.1")))),(0,l.mdx)("h4",{id:"pseudo_match_id-note"},(0,l.mdx)("em",{parentName:"h4"},"pseudo_match_id")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"0c0ea3df-97ea-4d3a-b1f6-f8e34042251f")),(0,l.mdx)("h4",{id:"game_mode-note"},(0,l.mdx)("em",{parentName:"h4"},"game_mode")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"game_mode":"{"lobby_type": "DOTA_lobby_type_name_custom_lobby" , "game_mode" : "NONE"}"}},"feature":"match_info"}\n{"info":{"match_info":{"game_mode":"{"lobby_type": "DOTA_lobby_type_name_custom_lobby" , "game_mode" : "GameMode_AllPick"}"}},"feature":"match_info"}\n{"info":{"match_info":{"game_mode":"{"lobby_type": "DOTA_lobby_type_name_custom_lobby" , "game_mode" : "GameMode_Turbo"}"}},"feature":"match_info"}\n')),(0,l.mdx)("h4",{id:"team_score-note"},(0,l.mdx)("em",{parentName:"h4"},"team_score")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"feature":"match_info","category":"team_score","key":"{\\"radiant\\":12,\\"dire\\":13}"}\n')),(0,l.mdx)("h2",{id:"roster"},(0,l.mdx)("inlineCode",{parentName:"h2"},"roster")),(0,l.mdx)("h3",{id:"info-updates-2"},"Info Updates"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"key"),(0,l.mdx)("th",{parentName:"tr",align:null},"Category"),(0,l.mdx)("th",{parentName:"tr",align:null},"Values"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"players"),(0,l.mdx)("td",{parentName:"tr",align:null},"roster"),(0,l.mdx)("td",{parentName:"tr",align:null},"A string holding a JSON array of player objects."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#players-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"114.1")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"bans"),(0,l.mdx)("td",{parentName:"tr",align:null},"roster"),(0,l.mdx)("td",{parentName:"tr",align:null},"A string holding a JSON array of bans objects."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#bans-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"114.1")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"draft"),(0,l.mdx)("td",{parentName:"tr",align:null},"roster"),(0,l.mdx)("td",{parentName:"tr",align:null},"A string holding a JSON array of draft objects."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#draft-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"114.1")))),(0,l.mdx)("h4",{id:"players-note"},(0,l.mdx)("em",{parentName:"h4"},"players")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"steamId":"76561198095792069","name":"mladen90","pickConfirmed":false,"hero":"","team":2,"role":1,"player_index":4}\n')),(0,l.mdx)("p",null,"Player object structure:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},'"steamId" - steamId string'),(0,l.mdx)("li",{parentName:"ul"},'"name" - player name in game'),(0,l.mdx)("li",{parentName:"ul"},"\u201cteamId\u201d",(0,l.mdx)("ul",{parentName:"li"},(0,l.mdx)("li",{parentName:"ul"},"2 \u2013 Radiant"),(0,l.mdx)("li",{parentName:"ul"},"3 \u2013 Dire"),(0,l.mdx)("li",{parentName:"ul"},"0 \u2013 Not in team"))),(0,l.mdx)("li",{parentName:"ul"},"\u201cheroId\u201d \u2013 ",(0,l.mdx)("a",{href:"https://github.com/kronusme/dota2-api/blob/master/data/heroes.json",target:"_blank"},"Heroes IDs")," (0 if still not picked)"),(0,l.mdx)("li",{parentName:"ul"},'"role" - role type.\n(1 - Safelane, 2 - Offlane, 4 - Midlane, 8 - Other, 16 - HardSupport, 888\\any other number - Can be received during bot matchups and should be ignored)'),(0,l.mdx)("li",{parentName:"ul"},'"index" - player slot (int 0-9)')),(0,l.mdx)("h4",{id:"bans-note"},(0,l.mdx)("em",{parentName:"h4"},"bans")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'[{"heroId": "75" , "team" : "0"},{"heroId": "14" , "team" : "0"}]\n')),(0,l.mdx)("p",null,"Bans object structure:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"\u201cheroId\u201d \u2013 ",(0,l.mdx)("a",{href:"https://github.com/kronusme/dota2-api/blob/master/data/heroes.json",target:"_blank"},"Heroes IDs")," (0 if still not picked)"),(0,l.mdx)("li",{parentName:"ul"},"\u201cteamId\u201d",(0,l.mdx)("ul",{parentName:"li"},(0,l.mdx)("li",{parentName:"ul"},"2 \u2013 Radiant"),(0,l.mdx)("li",{parentName:"ul"},"3 \u2013 Dire"),(0,l.mdx)("li",{parentName:"ul"},"0 \u2013 Not in team")))),(0,l.mdx)("h4",{id:"draft-note"},(0,l.mdx)("em",{parentName:"h4"},"draft")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'"[{"heroId": 56 , "team" : 3},{"heroId": 69 , "team" : 2},{"heroId": 101 , "team" : 2},{"heroId": 28 , "team" : 3}]"\n')),(0,l.mdx)("p",null,"Draft object structure:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"\u201cheroId\u201d \u2013 ",(0,l.mdx)("a",{href:"https://github.com/kronusme/dota2-api/blob/master/data/heroes.json",target:"_blank"},"Heroes IDs")," (0 if still not picked)"),(0,l.mdx)("li",{parentName:"ul"},"\u201cteamId\u201d",(0,l.mdx)("ul",{parentName:"li"},(0,l.mdx)("li",{parentName:"ul"},"2 \u2013 Radiant"),(0,l.mdx)("li",{parentName:"ul"},"3 \u2013 Dire"),(0,l.mdx)("li",{parentName:"ul"},"0 \u2013 Not in team")))),(0,l.mdx)("h2",{id:"party"},(0,l.mdx)("inlineCode",{parentName:"h2"},"party")),(0,l.mdx)("h3",{id:"info-updates-3"},"Info Updates"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"key"),(0,l.mdx)("th",{parentName:"tr",align:null},"Category"),(0,l.mdx)("th",{parentName:"tr",align:null},"Values"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"party"),(0,l.mdx)("td",{parentName:"tr",align:null},"party"),(0,l.mdx)("td",{parentName:"tr",align:null},"A string holding a JSON array of player objects."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#party-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"130.0")))),(0,l.mdx)("h4",{id:"party-note"},(0,l.mdx)("em",{parentName:"h4"},"party")," note"),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'[{"steamId":"76561198059980868","isLeader":false,"isCoach":false}]\n')),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"steamId \u2013 the player\u2019s Steam ID"),(0,l.mdx)("li",{parentName:"ul"},"isLeader \u2013 (bool) whether the player is the leader of the party"),(0,l.mdx)("li",{parentName:"ul"},"isCoach \u2013 (bool) whether the player is the coach of the party")),(0,l.mdx)("p",null,"Important note:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"The leader can be the coach as well"),(0,l.mdx)("li",{parentName:"ul"},"There\u2019s exactly one leader"),(0,l.mdx)("li",{parentName:"ul"},"There\u2019s at most one coach (it\u2019s optional)"),(0,l.mdx)("li",{parentName:"ul"},"This info-update is being updated for every party change")),(0,l.mdx)("h2",{id:"error"},(0,l.mdx)("inlineCode",{parentName:"h2"},"error")),(0,l.mdx)("h3",{id:"info-updates-4"},"Info Updates"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"key"),(0,l.mdx)("th",{parentName:"tr",align:null},"Category"),(0,l.mdx)("th",{parentName:"tr",align:null},"Values"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"plugin_error"),(0,l.mdx)("td",{parentName:"tr",align:null},"error"),(0,l.mdx)("td",{parentName:"tr",align:null},"This info update fires when the plugin is not initializing for some reason."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#plugin_error-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"133.8")))),(0,l.mdx)("h4",{id:"plugin_error-note"},(0,l.mdx)("em",{parentName:"h4"},"plugin_error")," note"),(0,l.mdx)("admonition",{title:"OBSOLETE",type:"warning"},(0,l.mdx)("p",{parentName:"admonition"},"This event is currently NOT supported.")),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"feature":"error","category":"error","key":"plugin_error","value":"failed_initializing_monitor"}\n')),(0,l.mdx)("h2",{id:"hero_pool"},(0,l.mdx)("inlineCode",{parentName:"h2"},"hero_pool")),(0,l.mdx)("h3",{id:"info-updates-5"},"Info Updates"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"key"),(0,l.mdx)("th",{parentName:"tr",align:null},"Category"),(0,l.mdx)("th",{parentName:"tr",align:null},"Values"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero_pool"),(0,l.mdx)("td",{parentName:"tr",align:null},"game_info"),(0,l.mdx)("td",{parentName:"tr",align:null},"The numberical ID's of heroes that are available for picking."),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#hero_pool-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"139.0")))),(0,l.mdx)("h4",{id:"hero_pool-note"},(0,l.mdx)("em",{parentName:"h4"},"hero_pool")," note"),(0,l.mdx)("p",null,'This data is available only in "Single Draft" & "Random Draft" modes in Dota.'),(0,l.mdx)("p",null,"You can find the Hero ID's in the following ",(0,l.mdx)("a",{href:"https://github.com/kronusme/dota2-api/blob/master/data/heroes.json",target:"_blank"},"link")),(0,l.mdx)("p",null,"Data Example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"category":"game_info","key":"hero_pool","value":"[2,4,5,7,8,16,18,20,21,22,23,27,31,32,34,35,37,38,44,47,48,49,52,53,59,64,65,67,70,71,72,74,75,81,84,85,91,92,95,98,99,100,104,105,106,109,110,113,120,121]}\n')),(0,l.mdx)("h2",{id:"me"},(0,l.mdx)("inlineCode",{parentName:"h2"},"me")),(0,l.mdx)("h3",{id:"info-updates-6"},"Info Updates"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"key"),(0,l.mdx)("th",{parentName:"tr",align:null},"Category"),(0,l.mdx)("th",{parentName:"tr",align:null},"Values"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"team"),(0,l.mdx)("td",{parentName:"tr",align:null},"me"),(0,l.mdx)("td",{parentName:"tr",align:null},"radiant / dire"),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#me-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"139.0")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"steam_id"),(0,l.mdx)("td",{parentName:"tr",align:null},"me"),(0,l.mdx)("td",{parentName:"tr",align:null},"ID number"),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#me-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"139.0")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"hero"),(0,l.mdx)("td",{parentName:"tr",align:null},"me"),(0,l.mdx)("td",{parentName:"tr",align:null},"Name of the hero you're playing"),(0,l.mdx)("td",{parentName:"tr",align:null},"See ",(0,l.mdx)("a",{parentName:"td",href:"#me-note"},"notes")),(0,l.mdx)("td",{parentName:"tr",align:null},"139.0")))),(0,l.mdx)("h4",{id:"me-note"},(0,l.mdx)("em",{parentName:"h4"},"me")," note"),(0,l.mdx)("p",null,"Event data example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"info":{"me":{"team":"radiant"}},"feature":"me"}\n{"info":{"me":{"steam_id":"7654654654"}},"feature":"me"}\n{"info":{"me":{"hero":"keeper_of_the_light"}},"feature":"me"}\n')),(0,l.mdx)("h2",{id:"game"},(0,l.mdx)("inlineCode",{parentName:"h2"},"game")),(0,l.mdx)("h3",{id:"info-updates-7"},"Info Updates"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"key"),(0,l.mdx)("th",{parentName:"tr",align:null},"Category"),(0,l.mdx)("th",{parentName:"tr",align:null},"Values"),(0,l.mdx)("th",{parentName:"tr",align:null},"Notes"),(0,l.mdx)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"game_state"),(0,l.mdx)("td",{parentName:"tr",align:null},"game"),(0,l.mdx)("td",{parentName:"tr",align:null},"Playing"),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"139.0")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"match_state"),(0,l.mdx)("td",{parentName:"tr",align:null},"game"),(0,l.mdx)("td",{parentName:"tr",align:null},"Current game-state"),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"139.0")))),(0,l.mdx)("p",null,"Event data example:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-json"},'{"info":{"game":{"game_state":"playing"}},"feature":"game"}\n{"info":{"game":{"match_state":"DOTA_GAMERULES_STATE_INIT"}},"feature":"game"}\n')))}x.isMDXComponent=!0}}]);