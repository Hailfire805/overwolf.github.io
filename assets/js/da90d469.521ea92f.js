"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7004],{3905:function(e,t,n){n.r(t),n.d(t,{MDXContext:function(){return p},MDXProvider:function(){return d},mdx:function(){return b},useMDXComponents:function(){return l},withMDXComponents:function(){return c}});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=r.createContext({}),c=function(e){return function(t){var n=l(t.components);return r.createElement(e,i({},t,{components:n}))}},l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,a=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=l(n),d=s,h=c["".concat(a,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function b(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,a=new Array(i);a[0]=h;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:s,a[1]=o;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},32243:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return l}});var r=n(87462),s=n(63366),i=(n(67294),n(3905)),a=["components"],o={id:"subscriptions-integration",title:"Integrate subscriptions in your app",sidebar_label:"Integrate subscriptions"},u=void 0,p={unversionedId:"start/subscriptions-integration",id:"start/subscriptions-integration",title:"Integrate subscriptions in your app",description:"This article will provide a step by step explanation for how to set up and manage your app's subscription features. If you need assistance or encounter issues, talk to us!",source:"@site/pages/docs/start/subscriptions-integration.mdx",sourceDirName:"start",slug:"/start/subscriptions-integration",permalink:"/V2TestFixed/docs/start/subscriptions-integration",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/website/pages/docs/pages/docs/start/subscriptions-integration.mdx",tags:[],version:"current",lastUpdatedBy:"Oded Itkin",lastUpdatedAt:1655031291,formattedLastUpdatedAt:"6/12/2022",frontMatter:{id:"subscriptions-integration",title:"Integrate subscriptions in your app",sidebar_label:"Integrate subscriptions"},sidebar:"start",previous:{title:"Subscriptions user flow",permalink:"/V2TestFixed/docs/start/subscriptions-flow"},next:{title:"Request an app plan",permalink:"/V2TestFixed/docs/start/subscriptions-request-form"}},c={},l=[{value:"Preparing subscription assets",id:"preparing-subscription-assets",level:2},{value:"1. Create a Demo Subscription Plan",id:"1-create-a-demo-subscription-plan",level:2},{value:"2. Define your App&#39;s Premium Features",id:"2-define-your-apps-premium-features",level:2},{value:"3. Add an Easy Way to Subscribe",id:"3-add-an-easy-way-to-subscribe",level:2},{value:"3. Check Whether the User is Subscribed",id:"3-check-whether-the-user-is-subscribed",level:2},{value:"4. Monitor Subscription Changes",id:"4-monitor-subscription-changes",level:2},{value:"Notes",id:"notes",level:2}],d={toc:l};function m(e){var t=e.components,o=(0,s.Z)(e,a);return(0,i.mdx)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"This article will provide a step by step explanation for how to set up and manage your app's subscription features. If you need assistance or encounter issues, talk to us!"),(0,i.mdx)("h2",{id:"preparing-subscription-assets"},"Preparing subscription assets"),(0,i.mdx)("p",null,"Before implementing subscriptions into your app, prepare the core assets required for this implementation including store assets, potential landing page materials and anything else you\u2019re going to need. "),(0,i.mdx)("p",null,"As mentioned ",(0,i.mdx)("a",{parentName:"p",href:"subscriptions-overview"},"before"),", any premium-only features need to be tested and polished before becoming available. Remember that paying customers and free users have different standards and expectations from you as the app\u2019s creator."),(0,i.mdx)("h2",{id:"1-create-a-demo-subscription-plan"},"1. Create a Demo Subscription Plan"),(0,i.mdx)("p",null,'The first step to take is creating a new subscription plan and setting it in a "test" state.',(0,i.mdx)("br",{parentName:"p"}),"\n","Right now we have to do that for you (after you fill up ",(0,i.mdx)("a",{parentName:"p",href:"subscriptions-request-form"},"this form"),"), but in the future you'll be able to do it independently from our dev console."),(0,i.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Notes")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("ul",{parentName:"div"},(0,i.mdx)("li",{parentName:"ul"},'Only whitelisted app "owners" with a live app on our store can create a subscription plan.  '),(0,i.mdx)("li",{parentName:"ul"},"For now, you may only create a single plan for each app. This might change in the future. ")))),(0,i.mdx)("p",null,"Once created, we will send you a new ",(0,i.mdx)("strong",{parentName:"p"},"subscription plan id"),"."),(0,i.mdx)("h2",{id:"2-define-your-apps-premium-features"},"2. Define your App's Premium Features"),(0,i.mdx)("p",null,"At this point, you should already know what your premium users will get for subscribing, usually exclusive perks or services.",(0,i.mdx)("br",{parentName:"p"}),"\n",'To simplify this guide, we assume that your core offering for premium users will be an "ad-free" version of your app.'),(0,i.mdx)("h2",{id:"3-add-an-easy-way-to-subscribe"},"3. Add an Easy Way to Subscribe"),(0,i.mdx)("p",null,'You can add a link to your app\'s page in the Overwolf store as an in-app Call to Action to subscribe. In our example, our plan offers an "ad-free" version of the app. So the best location will be right under the ad which will be removed:'),(0,i.mdx)("p",null,(0,i.mdx)("img",{alt:"remove an ad",src:n(44360).Z,width:"298",height:"212"})),(0,i.mdx)("p",null,"When users click the link, you should call to ",(0,i.mdx)("a",{parentName:"p",href:"../api/overwolf-utils#openstoreparam"},"overwolf.utils.openStore()"),".  "),(0,i.mdx)("p",null,"This will opens the current app\u2019s subscriptions page in the Overwolf Appstore:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"overwolf.utils.openStore({\n   page:overwolf.utils.enums.eStorePage.SubscriptionPage\n  })\n")),(0,i.mdx)("p",null,"The app's subscription page will open in a new window:"),(0,i.mdx)("p",null,(0,i.mdx)("img",{alt:"subscriptions page",src:n(95032).Z,width:"900",height:"560"})),(0,i.mdx)("p",null,"Once the user successfully finishes the subscription process, a ",(0,i.mdx)("a",{parentName:"p",href:"#4-monitor-subscription-changes"},"SubscriptionChangedEvent")," is triggered.  "),(0,i.mdx)("h2",{id:"3-check-whether-the-user-is-subscribed"},"3. Check Whether the User is Subscribed"),(0,i.mdx)("p",null,"To properly reward subscribed users with premium features (in this case, removing ads), you should check whether your current subscription plan is active for the current user. We will do that using the ",(0,i.mdx)("a",{parentName:"p",href:"../api/overwolf-profile-subscriptions#getactiveplanscallback"},"overwolf.profile.subscriptions.getActivePlans()")," function:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"\nvar myPlanID = 4564; //my app's subscription plan id\nvar isSubscribed = false; //flag that tells if the current user got an active subscription\n\noverwolf.profile.subscriptions.getActivePlans(function(info) { \n    if (info.success && info.plans != null && info.plans.includes(myPlanID)) {    \n            isSubscribed = true;\n            removeAds();\n    }\n);\n")),(0,i.mdx)("h2",{id:"4-monitor-subscription-changes"},"4. Monitor Subscription Changes"),(0,i.mdx)("p",null,"You can register to the ",(0,i.mdx)("a",{parentName:"p",href:"../api/overwolf-profile-subscriptions#onsubscriptionchanged"},"overwolf.profile.subscriptions.onSubscriptionChanged")," event which fires when the current extension subscription status has changed.  "),(0,i.mdx)("p",null,"If a user canceled their subscription or the subscription expired while the app is running, you can spot it on time and sync your app behavior accordingly."),(0,i.mdx)("p",null,"And there you have it! These are the basics of subscribing users to your app. We encourage you to figure out valuable premium plans and subscription features that will motivate your users to go premium. "),(0,i.mdx)("h2",{id:"notes"},"Notes"),(0,i.mdx)("p",null,"As the app owner, you have the option to add subscribers (usually for testing) through your dev console. Note that using this method is not the best way to test, as sync and other issues might prevent the new subscriber from being displayed as an active subscriber in the OW client settings page or even through the API (getActivePlans() can return 0 active subscriptions for example)."),(0,i.mdx)("p",null,"Therefore, the best way to test subscription-related issues is to follow the end-user scenario - open the plan page, hit the subscribe button, and purchase a test subscription."))}m.isMDXComponent=!0},44360:function(e,t,n){t.Z=n.p+"assets/images/remove-an-ad-d466cbcd77cf24d18ca7c01f7be3dda3.png"},95032:function(e,t,n){t.Z=n.p+"assets/images/subscription-page-b4df57c06da9291e220de414bc019b65.png"}}]);