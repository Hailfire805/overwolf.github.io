"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4622],{3905:function(e,t,n){n.r(t),n.d(t,{MDXContext:function(){return c},MDXProvider:function(){return m},mdx:function(){return y},useMDXComponents:function(){return p},withMDXComponents:function(){return s}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){return function(t){var n=p(t.components);return r.createElement(e,i({},t,{components:n}))}},p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),s=p(n),m=o,f=s["".concat(a,".").concat(m)]||s[m]||d[m]||i;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},35170:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],l={id:"writing-your-own-plugin",title:"Writing your own Overwolf plugin",sidebar_label:"Write your own plugin"},u=void 0,c={unversionedId:"topics/writing-your-own-plugin",id:"topics/writing-your-own-plugin",title:"Writing your own Overwolf plugin",description:"It's entirely possible for you to create new plug-ins for your needs, just follow these basic rules:",source:"@site/pages/docs/topics/writing-your-own-plugin.mdx",sourceDirName:"topics",slug:"/topics/writing-your-own-plugin",permalink:"/V2TestFixed/docs/topics/writing-your-own-plugin",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/website/pages/docs/pages/docs/topics/writing-your-own-plugin.mdx",tags:[],version:"current",lastUpdatedBy:"Oded Itkin",lastUpdatedAt:1655031291,formattedLastUpdatedAt:"6/12/2022",frontMatter:{id:"writing-your-own-plugin",title:"Writing your own Overwolf plugin",sidebar_label:"Write your own plugin"},sidebar:"docs",previous:{title:"Plug-in Implementation",permalink:"/V2TestFixed/docs/topics/how-to-use-plugins-in-your-app"},next:{title:"Sample plugin",permalink:"/V2TestFixed/docs/topics/sample-plugin"}},s={},p=[{value:"1. Implement the Overwolf interface",id:"1-implement-the-overwolf-interface",level:2},{value:"2. Make your public functions accessible",id:"2-make-your-public-functions-accessible",level:2},{value:"3. Implement asynchronous functions",id:"3-implement-asynchronous-functions",level:2}],m={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.mdx)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"It's entirely possible for you to create new plug-ins for your needs, just follow these basic rules:"),(0,i.mdx)("h2",{id:"1-implement-the-overwolf-interface"},"1. Implement the Overwolf interface"),(0,i.mdx)("p",null,"Create a .NET class library that implements a public constructor. When you call for overwolf.extensions.current.getExtraObject from Javascript, it will create an instance of your plugin and call on it\u2019s constructor."),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"It should be an empty constructor or a constructor that accepts an int variable (specifically, the Win32 window handle for the app window hosting your plugin)."),(0,i.mdx)("li",{parentName:"ul"},"Your class library can contain multiple classes \u2013 however you will need a new \u201cextra-object\u201d entry for each class with a unique name.")),(0,i.mdx)("h2",{id:"2-make-your-public-functions-accessible"},"2. Make your public functions accessible"),(0,i.mdx)("p",null,"Any public function, property or event will be accessible to your Javascript code automatically if it's in your class. Global events should look like: ",(0,i.mdx)("inlineCode",{parentName:"p"},"public event Action<object, object> onMyEvent")," (where you can pass any number of object parameters)."),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Your app will crash if it will try to load a plugin that declares a public event of a different form or which doesn\u2019t pass objects.")),(0,i.mdx)("h2",{id:"3-implement-asynchronous-functions"},"3. Implement asynchronous functions"),(0,i.mdx)("p",null,"Our best practice is to implement asynchronous-only functions that accept a callback function triggered by completion:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"public void add(int x, int y, Action<object> callback)\n")),(0,i.mdx)("div",{className:"admonition admonition-important alert alert--info"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("ul",{parentName:"div"},(0,i.mdx)("li",{parentName:"ul"},"Overwolf version 116.2 and all later versions will only support 64 bit CPUs, and therefore you\u2019ll be required to compile your .DLL to target the x64 platform."),(0,i.mdx)("li",{parentName:"ul"},"It is recommended that plugin DLLs be compiled with the .NET 4.8 framework (using a higher/lower framework version might lead to unexpected behaviors)")))),(0,i.mdx)("p",null,"We recommend you take a look at the ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/overwolf/overwolf-plugin-sample"},"overwolf-plugin-sample")," or ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/overwolf/overwolf-plugins"},"overwolf-plugins")," entry to get a quick start on developing your own plugins."))}d.isMDXComponent=!0}}]);